[{"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\index.tsx":"1","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts":"2","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx":"3","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx":"4","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx":"5","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx":"6","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx":"7","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx":"8","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx":"9","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginButton\\index.tsx":"10","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx":"11","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx":"12","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx":"13","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx":"14","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx":"15"},{"size":480,"mtime":1612987031357,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1612985141221,"results":"18","hashOfConfig":"17"},{"size":2591,"mtime":1612987031348,"results":"19","hashOfConfig":"17"},{"size":4251,"mtime":1612987031354,"results":"20","hashOfConfig":"17"},{"size":126,"mtime":1612987031361,"results":"21","hashOfConfig":"17"},{"size":486,"mtime":1612987031614,"results":"22","hashOfConfig":"17"},{"size":1765,"mtime":1613083594180,"results":"23","hashOfConfig":"17"},{"size":229,"mtime":1612987031509,"results":"24","hashOfConfig":"17"},{"size":536,"mtime":1612987031537,"results":"25","hashOfConfig":"17"},{"size":1821,"mtime":1612987031519,"results":"26","hashOfConfig":"17"},{"size":518,"mtime":1612987031515,"results":"27","hashOfConfig":"17"},{"size":1275,"mtime":1612987031545,"results":"28","hashOfConfig":"17"},{"size":557,"mtime":1612987031512,"results":"29","hashOfConfig":"17"},{"size":305,"mtime":1612987031549,"results":"30","hashOfConfig":"17"},{"size":1188,"mtime":1612987031529,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"3chi1g",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\index.tsx",["67","68"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { MainController } from './controller/MainController';\r\n\r\nMainController.getInstance().startApp();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["69","70"],"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts",[],"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx",[],"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx",["71","72","73","74","75","76","77","78","79","80"],"import { Page } from \"../view/pages/PageInterface\";\r\nimport { ReferringPage } from \"../view/pages/ReferringPage/index\";\r\nimport { State, States } from \"../view/pages/ReferringPage/State\";\r\nimport { PageController } from \"./PageController\";\r\nimport { MainController } from \"./MainController\";\r\n//import { VisualizationController } from \"./VisualizationController\";\r\n//import { AIController } from \"./AIController\";\r\nimport { QRCode, ErrorCorrectLevel, QRNumber, QRAlphaNum, QR8BitByte, QRKanji } from 'qrcode-generator-ts/js';\r\nimport { QRData } from \"qrcode-generator-ts/js/qrcode/QRData\";\r\n\r\nexport class RefferingController implements PageController {\r\n    private page: Page;\r\n\r\n    /**\r\n     * Konstruktor des Seitenverwalters. Registriert sich als Beobachter auf seiner Seite und setzt den start Status. \r\n     */\r\n    constructor() {\r\n        this.page = new ReferringPage({});\r\n        this.page.attach(this);\r\n    }\r\n\r\n    /**\r\n     * Die Update Methode des Seitenverwalters.\r\n     */\r\n    update() {\r\n        let currentState: States = this.page.getState();\r\n        switch (currentState) {\r\n            case States.NeedQR:\r\n                this.createQR();\r\n                break;\r\n            case States.Login:\r\n                this.login();\r\n                break;\r\n            case States.NewProjekt:\r\n                this.createNewProject();\r\n                break;\r\n            case States.LoadModel:\r\n                this.loadModel();\r\n                break;\r\n            case States.SetLanguage:\r\n                let languageCode = this.page.getState().languageCode;\r\n                //this.page.languageChanged(MainController.getInstance().setLanguage(languageCode));\r\n                break;\r\n            case States.NeedMessage:\r\n                let ids = this.page.getState().messageIDs;\r\n                this.page.getState().messages = MainController.getInstance().getMessage(ids);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    login() {\r\n        let loginData: string[] = this.page.getState().loginData;\r\n        let loginSucess: boolean = false;//MainController.getInstance().getFacade().loginAdmin(loginData[0], loginData[0]);\r\n        if (loginSucess) {\r\n            let projectMeta: { projectID: number; projectName: string; }[] = [{ projectID: 1, projectName: \"w\" }]; //MainController.getInstance().getFacade().getProjectMetas();\r\n            this.page.getState().projectMeta = projectMeta;\r\n            this.page.setState(\"loggedIn\");\r\n        } else {\r\n            this.page.setState(\"loginFailed\");\r\n        }\r\n    }\r\n\r\n    createQR() {\r\n        let link: string = \"test\"; //MainController.getInstance().getFacade().getDataMinerLink();\r\n\r\n        var qr = new QRCode();\r\n        qr.setTypeNumber(5);\r\n        qr.setErrorCorrectLevel(ErrorCorrectLevel.L);\r\n        qr.addData(link);\r\n        qr.make();\r\n\r\n        this.page.setState(States.ShowQR);\r\n    }\r\n\r\n    createNewProject() {\r\n        let sucess: boolean = false;//MainController.getInstance().getFacade().createProject(this.page.getState().toLoadProjectID);\r\n        if (sucess) {\r\n            this.page.setState(\"needQR\");\r\n        } else {\r\n            this.page.setState(\"ProjectError\");\r\n        }\r\n    }\r\n\r\n    loadProject() {\r\n        let projectId: number = this.page.getState().toLoadProjectID;\r\n        let sucess: boolean = false;//MainController.getInstance().getFacade().loadProject(projectId);\r\n        if (sucess) {\r\n            this.page.setState(\"needQR\");\r\n        } else {\r\n            this.page.setState(\"ProjectError\");\r\n        }\r\n    }\r\n\r\n    loadModel() {\r\n        let projectId: number = this.page.getState().toLoadProjectID;\r\n        let sucess: boolean = false;// MainController.getInstance().getFacade().loadProject(projectId);\r\n        if (sucess) {\r\n            //let aiController: AIController = new AIController();\r\n            //MainController.getInstance().changeTo(aiController);\r\n        } else {\r\n            this.page.setState(\"ProjectError\");\r\n        }\r\n    }\r\n\r\n    changeToVisualization() {\r\n        //let visualizationController: VisualizationController = new VisualizationController();\r\n        //MainController.getInstance().changeTo(visualizationController);\r\n    }\r\n}","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx",[],"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx",["81"],"export class State {\r\n  currentState: States = States.NeedMessage;\r\n  languageCode: string = \"de\";\r\n  messageIDs: number[] = [];\r\n  messages: string[] = [];\r\n  loginData: string[] = [];\r\n  projectMeta: string[] = [];\r\n  qrSvg: any = \"todo\";\r\n  NewProjectName: string = \"\";\r\n  toLoadProjectID: number = 0;\r\n}\r\n\r\n\r\nexport enum States {\r\n  NeedMessage,\r\n  NeedData,\r\n  GotData,\r\n  ChangePage,\r\n  NeedQR,\r\n  Login,\r\n  NewProjekt,\r\n  LoadProject,\r\n  LoadModel,\r\n  SetLanguage,\r\n  ShowQR\r\n}\r\n","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx",["82","83","84"],"import React, { Component } from 'react';\r\nimport ConstantsText from '../../components/ReferringComponents/ConstantsText';\r\nimport NewProjectButton from '../../components/ReferringComponents/NewProjectButton';\r\nimport LoginButton from '../../components/ReferringComponents/LoginButton';\r\nimport LoadModelButton from '../../components/ReferringComponents/LoadModelButton';\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport { MainController } from '../../../controller/MainController';\r\nimport ReactDOM from 'react-dom';\r\n\r\ntype Props = {\r\n};\r\n\r\nexport class ReferringPage extends React.Component<Props, State> implements Page {\r\n\r\n    observers: PageController[] = [];\r\n    state = new State()\r\n    constructor(props: Props) {\r\n        super(props);\r\n        const VDOM = (\r\n            <div>\r\n                <ConstantsText />\r\n                <NewProjectButton />\r\n                <LoginButton />\r\n                <LoadModelButton />\r\n            </div>\r\n        )\r\n        ReactDOM.render(VDOM, document.getElementById('root'));\r\n    }\r\n\r\n    attach(observer: PageController) {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    detach(observer: PageController) {\r\n        const index = this.observers.indexOf(observer, 0);\r\n        if (index > -1) {\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notify() {\r\n        for (let index = 0; index < this.observers.length; index++) {\r\n            const element = this.observers[index];\r\n            element.update();\r\n        }\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n    setState(state: State) {\r\n        this.state = state;\r\n        this.notify();\r\n    }\r\n}\r\n","D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx",[],"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx",[],"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginButton\\index.tsx",[],"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx",[],"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx",[],"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx",[],"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx",[],"D:\\ex2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx",[],{"ruleId":"85","severity":1,"message":"86","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":13},{"ruleId":"85","severity":1,"message":"89","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":16},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"85","severity":1,"message":"94","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":15},{"ruleId":"85","severity":1,"message":"95","line":8,"column":37,"nodeType":"87","messageId":"88","endLine":8,"endColumn":45},{"ruleId":"85","severity":1,"message":"96","line":8,"column":47,"nodeType":"87","messageId":"88","endLine":8,"endColumn":57},{"ruleId":"85","severity":1,"message":"97","line":8,"column":59,"nodeType":"87","messageId":"88","endLine":8,"endColumn":69},{"ruleId":"85","severity":1,"message":"98","line":8,"column":71,"nodeType":"87","messageId":"88","endLine":8,"endColumn":78},{"ruleId":"85","severity":1,"message":"99","line":9,"column":10,"nodeType":"87","messageId":"88","endLine":9,"endColumn":16},{"ruleId":"85","severity":1,"message":"100","line":41,"column":21,"nodeType":"87","messageId":"88","endLine":41,"endColumn":33},{"ruleId":"85","severity":1,"message":"101","line":54,"column":13,"nodeType":"87","messageId":"88","endLine":54,"endColumn":32},{"ruleId":"85","severity":1,"message":"102","line":87,"column":13,"nodeType":"87","messageId":"88","endLine":87,"endColumn":30},{"ruleId":"85","severity":1,"message":"102","line":97,"column":13,"nodeType":"87","messageId":"88","endLine":97,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":2,"column":26,"nodeType":"87","messageId":"105","endLine":2,"endColumn":32},{"ruleId":"85","severity":1,"message":"106","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"107","line":9,"column":10,"nodeType":"87","messageId":"88","endLine":9,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":55,"column":9,"nodeType":"110","endLine":55,"endColumn":13},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"'State' is defined but never used.","'QRNumber' is defined but never used.","'QRAlphaNum' is defined but never used.","'QR8BitByte' is defined but never used.","'QRKanji' is defined but never used.","'QRData' is defined but never used.","'languageCode' is assigned a value but never used.","'loginData' is assigned a value but never used.","'projectId' is assigned a value but never used.","@typescript-eslint/no-use-before-define","'States' was used before it was defined.","noUseBeforeDefine","'Component' is defined but never used.","'MainController' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","no-global-assign","no-unsafe-negation"]