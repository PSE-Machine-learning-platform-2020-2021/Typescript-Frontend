[{"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\index.tsx":"1","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts":"2","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx":"3","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\StartController.tsx":"4","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx":"5","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx":"6","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\State.tsx":"7","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\Language.tsx":"8","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\DataCollectionController.tsx":"9","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\User.tsx":"10","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\SensorManager.tsx":"11","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\DeliveryController.tsx":"12","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\DatabaseConnector.tsx":"13","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\VisualizationController.tsx":"14","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\StartPage\\index.tsx":"15","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\AIDistributor.tsx":"16","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\AIBuilder.tsx":"17","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DataCollectionPage\\index.tsx":"18","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\FinishController.tsx":"19","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\Project.tsx":"20","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\ModelCreationController.tsx":"21","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\StartPage\\State.tsx":"22","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\DeviceData.tsx":"23","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\index.tsx":"24","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\DeliveryFormat.tsx":"25","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\index.tsx":"26","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DataCollectionPage\\State.tsx":"27","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\AIModel.tsx":"28","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\Session.tsx":"29","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\StartComponents\\Title\\index.tsx":"30","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\DataSet.tsx":"31","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\State.tsx":"32","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\SensorData.tsx":"33","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\index.tsx":"34","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\StartComponents\\Input\\index.tsx":"35","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx":"36","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\State.tsx":"37","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\DataCollectionComponents\\Title\\index.tsx":"38","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\DataCollectionComponents\\Countdown\\index.tsx":"39","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\DownloadButton\\index.tsx":"40","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\DataRow.tsx":"41","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\State.tsx":"42","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\FinishButton\\index.tsx":"43","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\Label.tsx":"44","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\EmailList\\index.tsx":"45","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx":"46","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\DataCollectionComponents\\Diagram\\index.jsx":"47","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\DiagramList\\index.jsx":"48","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\DataPoint.tsx":"49","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\TimeSpan.tsx":"50","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx":"51","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\Train\\index.tsx":"52","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx":"53","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx":"54","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginWindow\\index.tsx":"55","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx":"56","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx":"57","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ChangeToVisuBtn\\index.tsx":"58","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx":"59","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx":"60"},{"size":419,"mtime":1613985249266,"results":"61","hashOfConfig":"62"},{"size":440,"mtime":1613740448413,"results":"63","hashOfConfig":"62"},{"size":3264,"mtime":1613985249258,"results":"64","hashOfConfig":"62"},{"size":3510,"mtime":1613926618692,"results":"65","hashOfConfig":"62"},{"size":7331,"mtime":1613988759040,"results":"66","hashOfConfig":"62"},{"size":17283,"mtime":1613985249276,"results":"67","hashOfConfig":"62"},{"size":4192,"mtime":1613985249304,"results":"68","hashOfConfig":"62"},{"size":1875,"mtime":1613740448407,"results":"69","hashOfConfig":"62"},{"size":1602,"mtime":1613740448389,"results":"70","hashOfConfig":"62"},{"size":14043,"mtime":1613926618713,"results":"71","hashOfConfig":"62"},{"size":6227,"mtime":1613985249262,"results":"72","hashOfConfig":"62"},{"size":2284,"mtime":1613985249257,"results":"73","hashOfConfig":"62"},{"size":11096,"mtime":1613985249273,"results":"74","hashOfConfig":"62"},{"size":2618,"mtime":1613987378059,"results":"75","hashOfConfig":"62"},{"size":2357,"mtime":1614584684920,"results":"76","hashOfConfig":"62"},{"size":2497,"mtime":1613985249269,"results":"77","hashOfConfig":"62"},{"size":4485,"mtime":1613985249267,"results":"78","hashOfConfig":"62"},{"size":2822,"mtime":1613926618716,"results":"79","hashOfConfig":"62"},{"size":3633,"mtime":1613905628474,"results":"80","hashOfConfig":"62"},{"size":7252,"mtime":1613926618707,"results":"81","hashOfConfig":"62"},{"size":2147,"mtime":1613942665202,"results":"82","hashOfConfig":"62"},{"size":511,"mtime":1613740448466,"results":"83","hashOfConfig":"62"},{"size":2085,"mtime":1613985249274,"results":"84","hashOfConfig":"62"},{"size":1768,"mtime":1613987378063,"results":"85","hashOfConfig":"62"},{"size":214,"mtime":1613740448404,"results":"86","hashOfConfig":"62"},{"size":3877,"mtime":1613987378077,"results":"87","hashOfConfig":"62"},{"size":437,"mtime":1613927322703,"results":"88","hashOfConfig":"62"},{"size":485,"mtime":1613740448401,"results":"89","hashOfConfig":"62"},{"size":1574,"mtime":1613985249279,"results":"90","hashOfConfig":"62"},{"size":1002,"mtime":1613740448450,"results":"91","hashOfConfig":"62"},{"size":6044,"mtime":1613985249271,"results":"92","hashOfConfig":"62"},{"size":276,"mtime":1613740448457,"results":"93","hashOfConfig":"62"},{"size":1533,"mtime":1613985249278,"results":"94","hashOfConfig":"62"},{"size":2090,"mtime":1613987378066,"results":"95","hashOfConfig":"62"},{"size":3805,"mtime":1614586194643,"results":"96","hashOfConfig":"62"},{"size":6387,"mtime":1613987378073,"results":"97","hashOfConfig":"62"},{"size":433,"mtime":1613985249306,"results":"98","hashOfConfig":"62"},{"size":1002,"mtime":1613740448419,"results":"99","hashOfConfig":"62"},{"size":1046,"mtime":1613985249281,"results":"100","hashOfConfig":"62"},{"size":363,"mtime":1613740448420,"results":"101","hashOfConfig":"62"},{"size":2606,"mtime":1613926618698,"results":"102","hashOfConfig":"62"},{"size":777,"mtime":1613926618718,"results":"103","hashOfConfig":"62"},{"size":366,"mtime":1613740448451,"results":"104","hashOfConfig":"62"},{"size":1787,"mtime":1613740448406,"results":"105","hashOfConfig":"62"},{"size":5870,"mtime":1613985249283,"results":"106","hashOfConfig":"62"},{"size":731,"mtime":1613987378070,"results":"107","hashOfConfig":"62"},{"size":2433,"mtime":1613864897347,"results":"108","hashOfConfig":"62"},{"size":5298,"mtime":1613985249299,"results":"109","hashOfConfig":"62"},{"size":946,"mtime":1613922841304,"results":"110","hashOfConfig":"62"},{"size":1370,"mtime":1613740448411,"results":"111","hashOfConfig":"62"},{"size":229,"mtime":1613740448438,"results":"112","hashOfConfig":"62"},{"size":10383,"mtime":1613985249285,"results":"113","hashOfConfig":"62"},{"size":1284,"mtime":1613985249294,"results":"114","hashOfConfig":"62"},{"size":778,"mtime":1613985249288,"results":"115","hashOfConfig":"62"},{"size":3247,"mtime":1613985249289,"results":"116","hashOfConfig":"62"},{"size":514,"mtime":1613740448445,"results":"117","hashOfConfig":"62"},{"size":646,"mtime":1613740448439,"results":"118","hashOfConfig":"62"},{"size":397,"mtime":1613740448437,"results":"119","hashOfConfig":"62"},{"size":3164,"mtime":1613985249296,"results":"120","hashOfConfig":"62"},{"size":1814,"mtime":1613985249292,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1awp6gb",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"161","usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\index.tsx",[],["248","249"],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\StartController.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx",["250","251","252","253"],"import { Page } from \"../view/pages/PageInterface\";\r\nimport { IState, States } from \"../view/pages/State\";\r\nimport { PageController } from \"./PageController\";\r\nimport { MainController } from \"./MainController\";\r\nimport { DeliveryController } from \"./DeliveryController\";\r\nimport { VisualizationController } from \"./VisualizationController\";\r\nimport { StartPage } from \"../view/pages/StartPage/index\";\r\nimport { QRCode, ErrorCorrectLevel, QRNumber, QRAlphaNum, QR8BitByte, QRKanji } from 'qrcode-generator-ts/js';\r\n\r\n\r\nexport class RefferingController implements PageController {\r\n    private page: Page;\r\n    private state: IState;\r\n\r\n    /**\r\n     * Konstruktor des Seitenverwalters. Registriert sich als Beobachter auf seiner Seite und setzt den Start Status. \r\n     */\r\n    constructor() {\r\n        this.page = new StartPage({});\r\n        // this.page = new VisualizationPage({});\r\n\r\n        this.page.attach(this);\r\n        this.state = this.page.getState();\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Die Update Methode des Seitenverwalters.\r\n     */\r\n    update() {\r\n        this.state = this.page.getState();\r\n        switch (this.state.currentState) {\r\n            case States.LoadProject:\r\n                this.loadProject();\r\n                break;\r\n            case States.Register:\r\n                this.register();\r\n                break;\r\n            case States.Login:\r\n                this.login();\r\n                break;\r\n            case States.NewProjekt:\r\n                this.createNewProject();\r\n                break;\r\n            case States.LoadModel:\r\n                this.loadModel();\r\n                break;\r\n            case States.SetLanguage:\r\n                this.page.setState(MainController.getInstance().setLanguage(this.state.languageCode));\r\n                break;\r\n            case States.NeedMessage:\r\n                this.page.setState(MainController.getInstance().getMessage(this.state.messages));\r\n                break;\r\n            case States.ChangeToVisual:\r\n                MainController.getInstance().changeTo(new VisualizationController(this.state.currentProject!));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Logt den Benutzer ein\r\n     */\r\n    login() {\r\n        let adminData: { name: string, email: string, password: string; } = this.state.adminData!;\r\n        let loginSucess: Promise<boolean> = MainController.getInstance().getFacade().loginAdmin(adminData.email, adminData.password);\r\n        this.state.wait! = loginSucess;\r\n        this.state.currentState = States.waitForDB;\r\n        this.page.setState(this.state);\r\n        loginSucess.then((value: boolean) => {\r\n            if (value) {\r\n                this.state.projectData! = [];\r\n                let projectData: Promise<{ projectID: number; projectName: string; AIModelID: number[]; }[]> = MainController.getInstance().getFacade().getProjectMetas();\r\n                projectData.then((data: { projectID: number; projectName: string; AIModelID: number[]; }[]) => {\r\n                    this.state.projectData! = data;\r\n                    this.page.setState(this.state);\r\n                });\r\n\r\n            } else {\r\n                this.state.currentState = States.LoginFail;\r\n            }\r\n            this.page.setState(this.state);\r\n        });\r\n        loginSucess.catch((value: boolean) => {\r\n            console.log(value);\r\n        });\r\n        //this.state.projectData! = [{ projectID: 1, projectName: \"string\", AIModelID: [1,2] }]\r\n        //this.page.setState(this.state)\r\n    }\r\n\r\n    /**\r\n     * Registriert den Benutzer\r\n     */\r\n    register() {\r\n        let adminData: { name: string, email: string, password: string; } = this.state.adminData!;\r\n        let loginSucess: Promise<boolean> = MainController.getInstance().getFacade().registerAdmin(adminData.name, adminData.email, adminData.password);\r\n        this.state.wait! = loginSucess;\r\n        this.state.currentState = States.waitForDB;\r\n        this.page.setState(this.state);\r\n        loginSucess.then((value: boolean) => {\r\n            if (!value) {\r\n                this.state.currentState = States.LoginFail;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Erstellt ein QRCode und übergibt in an die Seite\r\n     */\r\n    createQR() {\r\n        const url = new URL(document.URL);\r\n        url.searchParams.append(\"SessionID\", MainController.getInstance().getFacade().getSessionID().toString());\r\n        url.searchParams.append(\"isMiner\", \"true\");\r\n        let link: string = url.toString();\r\n        var qr = new QRCode();\r\n        qr.setTypeNumber(5);\r\n        qr.setErrorCorrectLevel(ErrorCorrectLevel.L);\r\n        qr.addData(link);\r\n        qr.make();\r\n        this.state.qr = qr.toDataURL();\r\n        this.state.currentState = States.SetQRC;\r\n    }\r\n\r\n    /**\r\n     * Erstelle ein neues Projekt, welches auch als momentanes Projekt gesetzt wird.\r\n     */\r\n    createNewProject() {\r\n        let sucess: Promise<boolean> = MainController.getInstance().getFacade().createProject(this.state.currentProject!.projectName);\r\n        this.state.wait! = sucess;\r\n        this.state.currentState = States.waitForDB;\r\n        this.page.setState(this.state);\r\n        sucess.then((value: boolean) => {\r\n            if (value) {\r\n                this.createQR();\r\n                let projectData: Promise<{ projectID: number; projectName: string; AIModelID: number[]; }[]> = MainController.getInstance().getFacade().getProjectMetas();\r\n                projectData.then((data: { projectID: number; projectName: string; AIModelID: number[]; }[]) => {\r\n                    this.state.projectData! = data;\r\n                });\r\n            } else {\r\n                this.state.currentState = States.LoadError;\r\n            }\r\n            this.page.setState(this.state);\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Setzt ein Projekt als momentanes Projekt\r\n     */\r\n    loadProject() {\r\n        let projectId: number = this.state.currentProject!.projectID!;\r\n        let sucess: Promise<boolean> = MainController.getInstance().getFacade().loadProject(projectId);\r\n        this.state.wait! = sucess;\r\n        this.state.currentState = States.waitForDB;\r\n        this.page.setState(this.state);\r\n        sucess.then((value: boolean) => {\r\n            if (value) {\r\n                this.createQR();\r\n            } else {\r\n                this.state.currentState = States.LoadError;\r\n            }\r\n        });\r\n        this.page.setState(this.state);\r\n    }\r\n\r\n    /**\r\n     * Läde ein Modell und wechselt zur delivery Seite\r\n     */\r\n    loadModel() {\r\n        let projectId: number = this.state.currentProject!.projectID;\r\n        let sucess: Promise<boolean> = MainController.getInstance().getFacade().loadProject(projectId);\r\n        this.state.wait! = sucess;\r\n        this.state.currentState = States.waitForDB;\r\n        this.page.setState(this.state);\r\n        sucess.then((value: boolean) => {\r\n            if (value) {\r\n                let deliveryConroller: DeliveryController = new DeliveryController(this.state.currentProject!);\r\n                MainController.getInstance().changeTo(deliveryConroller);\r\n            } else {\r\n                this.state.currentState = States.LoadError;\r\n            }\r\n        });\r\n        this.page.setState(this.state);\r\n    }\r\n}","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\State.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\Language.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\DataCollectionController.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\User.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\SensorManager.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\DeliveryController.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\DatabaseConnector.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\VisualizationController.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\StartPage\\index.tsx",["254","255"],"import React, { Component } from 'react';\r\nimport PubSub from 'pubsub-js';\r\nimport Title from '../../components/StartComponents/Title';\r\nimport Input from '../../components/StartComponents/Input';\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport ReactDOM from 'react-dom';\r\nimport { States } from '../State';\r\n\r\ntype Props = {\r\n\r\n};\r\n\r\nexport class StartPage extends React.Component<Props, State> implements Page {\r\n    state = new State();\r\n    observers: PageController[] = [];\r\n    constructor(props: Props) {\r\n        super(props);\r\n        const VDOM = (\r\n            <div>\r\n                <Title />\r\n                <Input />\r\n            </div>\r\n        );\r\n        ReactDOM.render(VDOM, document.getElementById('root'));\r\n        this.setAvailableSensors();\r\n        this.changeSettings();\r\n    }\r\n\r\n    setAvailableSensors() {\r\n        console.log(\"Publish\");\r\n        let data = [{ sensorTypID: 0, sensorType: \"a\", chosen: false }];\r\n        PubSub.publish(\"setAvailableSensors\", data);\r\n    }\r\n\r\n    /**\r\n     * Prüft ob der Nutzer \"Start\" druckt und ändert den Zustand.\r\n     */\r\n    changeSettings() {\r\n        PubSub.subscribe('settingsFinish', (data: {\r\n            newDataSetName: string,\r\n            usedSensorTypes: number[],\r\n            waitTime: number,\r\n            readTime: number,\r\n            availableSensorTypes: { sensorTypID: number, sensorType: string, chosen: boolean; }[];\r\n        }) => {\r\n            this.setState({ recordingSettings: data });\r\n            this.state.currentState = States.ChangeToDataCollection;\r\n            this.notify();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Die Methoden für Beobachtermuster\r\n     * @param observer Beobachter,nähmlich Controller\r\n     */\r\n    attach(observer: PageController) {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    detach(observer: PageController) {\r\n        const index = this.observers.indexOf(observer, 0);\r\n        if (index > -1) {\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notify() {\r\n        for (let index = 0; index < this.observers.length; index++) {\r\n            const element = this.observers[index];\r\n            element.update();\r\n        }\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n}\r\n","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\AIDistributor.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\AIBuilder.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DataCollectionPage\\index.tsx",["256"],"import React from 'react';\r\nimport PubSub from 'pubsub-js';\r\nimport Title from '../../components/DataCollectionComponents/Title';\r\nimport Countdown from '../../components/DataCollectionComponents/Countdown';\r\nimport Diagram from '../../components/DataCollectionComponents/Diagram';\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport ReactDOM from 'react-dom';\r\nimport { States } from '../State';\r\n\r\ntype Props = {\r\n};\r\n\r\nexport class DataCollectionPage extends React.Component<Props, State> implements Page {\r\n    state = new State;\r\n    observers: PageController[] = [];\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.finishCountdown();\r\n        const VDOM = (\r\n            <div>\r\n                <Title />\r\n                <Countdown />\r\n                <Diagram />\r\n            </div>\r\n        );\r\n        ReactDOM.render(VDOM, document.getElementById('root'));\r\n    }\r\n\r\n\r\n    /**\r\n     * Diese Methode braucht nur einmal aufzurufen, Countdown geht automatisch.\r\n     * @param countdownNumber Die Countdownzahl zu zeigen.\r\n     */\r\n    showCountdownNumber(leadTime: number) {\r\n        this.setState({ leadTime: leadTime });\r\n        PubSub.publish('startCounting', this.state.leadTime);\r\n    }\r\n\r\n    /**\r\n     * Prüft ob Countdown fertig ist und ändert den Zustand.\r\n     */\r\n    finishCountdown() {\r\n        PubSub.subscribe('finishCountdwon', () => {\r\n            this.setState({ currentState: States.NeedInstantDiagram });\r\n            this.notify();\r\n        }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Diese Methode sollte während Datenerfassung jede Sekunde von Controller aufgerufen werden, um Bild zu updaten.\r\n     * @param countdownNumber Die Countdownzahl zu zeigen\r\n     */\r\n    showDiagram(dataRows: { value: number; relativeTime: number; }[][], usedSensorNames: string[]) {\r\n       // this.setState({ dataRows: dataRows });\r\n        this.setState({ usedSensorNames: usedSensorNames });\r\n        //PubSub.publish('startDiagram', this.state.dataRows);\r\n        PubSub.publish('giveLineLabels', this.state.usedSensorNames);\r\n    }\r\n\r\n    /**\r\n     * Die Methoden für Beobachtermuster\r\n     * @param observer Beobachter,nähmlich Controller\r\n     */\r\n    attach(observer: PageController) {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    detach(observer: PageController) {\r\n        const index = this.observers.indexOf(observer, 0);\r\n        if (index > -1) {\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notify() {\r\n        for (let index = 0; index < this.observers.length; index++) {\r\n            const element = this.observers[index];\r\n            element.update();\r\n        }\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n}","D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\FinishController.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\Project.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\controller\\ModelCreationController.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\StartPage\\State.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\DeviceData.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\DeliveryFormat.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DataCollectionPage\\State.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\AIModel.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\Session.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\StartComponents\\Title\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\DataSet.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\State.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\SensorData.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\StartComponents\\Input\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\State.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\DataCollectionComponents\\Title\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\DataCollectionComponents\\Countdown\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\DownloadButton\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\DataRow.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\State.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\FinishButton\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\Label.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\EmailList\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\DataCollectionComponents\\Diagram\\index.jsx",["257","258"],"import React, { Component } from 'react';\r\nimport PubSub from 'pubsub-js';\r\n\r\nexport default class Diagram extends Component {\r\n    state = {\r\n        sensorRow: [],\r\n        datavalue: [],\r\n        time: [],\r\n        showDiagram: false,\r\n        color: ['rgba(46,139,87,1)', 'rgba(68,24,232,1)', 'rgba(238,173,14,1)', 'rgba(178,34,34,1)'],\r\n    };\r\n\r\n    render() {\r\n        PubSub.subscribe(\"startDiagram\", (dataRows) => {\r\n            this.setState({\r\n                sensorRow: [],\r\n                datavalue: [],\r\n                time: [],\r\n                showDiagram: true\r\n            });\r\n            //put each value Array in State\r\n            for (var i = 0; i < dataRows.length; i++) {\r\n                var datavalues = [];\r\n                for (var j = 0; j < dataRows[i].length; j++) {\r\n                    datavalues.push(dataRows[i][j].value);\r\n                }\r\n                this.state.datavalue.push(datavalues);\r\n            }\r\n\r\n            //put time in State\r\n            for (var j = 0; j < dataRows[0].length; j++) {\r\n                this.state.time.push(dataRows[0][j].relativeTime);\r\n            }\r\n        });\r\n        var newDatasets = [];\r\n        for (var i = 0; i < this.state.sensorRow.length; i++) {\r\n            newDatasets.push(\r\n                {\r\n                    label: this.state.sensorRow[i],\r\n                    strokeColor: this.state.color[i],\r\n                    borderWidth: 1,\r\n                    data: this.state.datavalue[i],\r\n                }\r\n            );\r\n\r\n        }\r\n        const data = {\r\n            labels: this.state.time,\r\n            datasets: newDatasets\r\n        };\r\n        const options = {\r\n            datasetFill: false,\r\n            pointDotRadius: 2,\r\n            pointHitDetectionRadius: 1,\r\n            offsetGridLines: false,\r\n        };\r\n        PubSub.subscribe(\"giveLineLabels\", (usedSensorNames) => {\r\n            this.setState({ sensorRow: usedSensorNames });\r\n        });\r\n        const lineLabels = [];\r\n        for (var i = 0; i < this.state.sensorRow.length; i++) {\r\n            lineLabels.push(<font color={this.state.color[i]}>■{this.state.sensorRow[i]}<br /></font>);\r\n        }\r\n\r\n        var LineChart = require(\"react-chartjs\").Line;\r\n\r\n        return (\r\n            <div>\r\n                {lineLabels}\r\n                <LineChart data={data} options={options} width=\"425\" height=\"275\" />\r\n            </div>\r\n        );\r\n    }\r\n}",["259","260"],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\DiagramList\\index.jsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\DataPoint.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\model\\TimeSpan.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\Train\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginWindow\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ChangeToVisuBtn\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx",[],"D:\\PSE\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx",[],{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":8,"column":37,"nodeType":"267","messageId":"268","endLine":8,"endColumn":45},{"ruleId":"265","severity":1,"message":"269","line":8,"column":47,"nodeType":"267","messageId":"268","endLine":8,"endColumn":57},{"ruleId":"265","severity":1,"message":"270","line":8,"column":59,"nodeType":"267","messageId":"268","endLine":8,"endColumn":69},{"ruleId":"265","severity":1,"message":"271","line":8,"column":71,"nodeType":"267","messageId":"268","endLine":8,"endColumn":78},{"ruleId":"265","severity":1,"message":"272","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":26},{"ruleId":"273","severity":1,"message":"274","line":49,"column":13,"nodeType":"275","endLine":49,"endColumn":23},{"ruleId":"276","severity":1,"message":"277","line":16,"column":13,"nodeType":"278","messageId":"279","endLine":16,"endColumn":22,"fix":"280"},{"ruleId":"281","severity":1,"message":"282","line":31,"column":22,"nodeType":"267","messageId":"283","endLine":31,"endColumn":23},{"ruleId":"281","severity":1,"message":"284","line":61,"column":18,"nodeType":"267","messageId":"283","endLine":61,"endColumn":19},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"@typescript-eslint/no-unused-vars","'QRNumber' is defined but never used.","Identifier","unusedVar","'QRAlphaNum' is defined but never used.","'QR8BitByte' is defined but never used.","'QRKanji' is defined but never used.","'Component' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"287","text":"288"},"no-redeclare","'j' is already defined.","redeclared","'i' is already defined.","no-global-assign","no-unsafe-negation",[634,634],"()"]