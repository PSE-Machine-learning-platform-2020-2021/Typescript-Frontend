[{"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\index.tsx":"1","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\App.tsx":"3","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx":"4","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx":"5","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx":"6","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx":"7","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx":"8","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginButton\\index.tsx":"9","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx":"10","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx":"11","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx":"12","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx":"13","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx":"14","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx":"15","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx":"16"},{"size":497,"mtime":1612814314612,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":691,"mtime":1612814116037,"results":"20","hashOfConfig":"18"},{"size":2786,"mtime":1612814494091,"results":"21","hashOfConfig":"18"},{"size":4251,"mtime":1612814116093,"results":"22","hashOfConfig":"18"},{"size":117,"mtime":1612809061643,"results":"23","hashOfConfig":"18"},{"size":460,"mtime":1612811914258,"results":"24","hashOfConfig":"18"},{"size":1722,"mtime":1612814473674,"results":"25","hashOfConfig":"18"},{"size":1757,"mtime":1612812105337,"results":"26","hashOfConfig":"18"},{"size":218,"mtime":1612799165927,"results":"27","hashOfConfig":"18"},{"size":499,"mtime":1612799165974,"results":"28","hashOfConfig":"18"},{"size":545,"mtime":1612799166059,"results":"29","hashOfConfig":"18"},{"size":293,"mtime":1612799166121,"results":"30","hashOfConfig":"18"},{"size":1240,"mtime":1612799166090,"results":"31","hashOfConfig":"18"},{"size":540,"mtime":1612799165943,"results":"32","hashOfConfig":"18"},{"size":1152,"mtime":1612799166043,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"o0lo48",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\index.tsx",["72","73","74"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MainController } from './controller/MainController';\n\nMainController.getInstance().startDesktop();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["75","76"],"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\App.tsx",["77","78"],"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx",["79"],"import { PageController } from \"./PageController\";\r\n//import { StartController } from \"./StartController\";\r\nimport { RefferingController } from \"./ReferringController\";\r\nimport { MainControllerInterface } from \"./MainControllerInterface\";\r\nimport { Facade } from \"../model/Facade\";\r\n\r\nexport class MainController implements MainControllerInterface {\r\n  private facade: Facade;\r\n\r\n  private static mainController: MainController;\r\n\r\n  private currentPageController: PageController | undefined;\r\n\r\n  /**\r\n   * Konstruktor des MainControllers. Holt sich die Fassade.\r\n   */\r\n  constructor() {\r\n    this.facade = new Facade();\r\n  }\r\n\r\n  /**\r\n   * Gibt sich selber zurück und sorgt dafür das nur ein MainController besteht.\r\n   * @returns MainController\r\n   */\r\n  static getInstance() {\r\n    if (this.mainController == undefined) {\r\n      this.mainController = new MainController();\r\n      return this.mainController;\r\n    }\r\n    return this.mainController;\r\n  }\r\n\r\n  /**\r\n   * Prüft ob das Gerät auf das Internet zugreifen kann.\r\n   * @returns Gibt true zurück falls eine Internetverbindung besteht, sonst wird false zurück gegeben.\r\n   */\r\n  checkConnection() {\r\n    return window.navigator.onLine;\r\n  }\r\n\r\n  /**\r\n   * Prüft ob der Benutzer angemeldet ist.\r\n   * @returns Gibt true zurück falls der Benutzer angemeldet ist, sonst wird false zurück gegeben.\r\n   */\r\n  checkLoginStatus() {\r\n    return false;//this.facade.checkLogin();\r\n  }\r\n\r\n  // static getSession() {\r\n  //    return false\r\n  //}\r\n\r\n  /**\r\n   * Setzt den momentanen Seitenverwalter neu\r\n   * @param destinationPageController Der neue Seitenverwalter\r\n   */\r\n  changeTo(destinationPageController: PageController) {\r\n    this.currentPageController = destinationPageController;\r\n  }\r\n\r\n  /**\r\n   * Andwendungstart für einen Desktop\r\n   */\r\n  startDesktop() {\r\n    let refferingController: RefferingController = new RefferingController();\r\n    this.changeTo(refferingController);\r\n  }\r\n\r\n  /**\r\n   * Andwendungstart für ein Smartphone\r\n   */\r\n  startSmartphone() {\r\n    //let startController: StartController = new StartController();\r\n    //this.changeTo(startController);\r\n  }\r\n\r\n  /**\r\n   * @returns Gibt die Fassade zurück\r\n   */\r\n  getFacade() {\r\n    return this.facade;\r\n  }\r\n\r\n  /**\r\n   * @param ids Alle ids, zu denen man die Texte möchte.\r\n   * @returns Gibt alle texte zu den übergebenen ids zurück.\r\n   */\r\n  getMessage(ids: number[]) {\r\n    return [];//MainController.getInstance().getFacade().getMessage(ids);\r\n  }\r\n\r\n  /**\r\n   * @param languageCode Das Sprachkürzel als string.\r\n   * @returns Gibt true zurück falls der wechsel erfolgt ist, sonst false.\r\n   */\r\n  setLanguage(languageCode: string) {\r\n    let changed = true;//this.facade.setLanguage(languageCode);\r\n    return changed;\r\n  }\r\n}\r\n","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx",["80","81","82","83","84","85","86","87","88","89"],"import { Page } from \"../view/pages/PageInterface\";\r\nimport { ReferringPage } from \"../view/pages/ReferringPage/index\";\r\nimport { State, States } from \"../view/pages/ReferringPage/State\";\r\nimport { PageController } from \"./PageController\";\r\nimport { MainController } from \"./MainController\";\r\n//import { VisualizationController } from \"./VisualizationController\";\r\n//import { AIController } from \"./AIController\";\r\nimport { QRCode, ErrorCorrectLevel, QRNumber, QRAlphaNum, QR8BitByte, QRKanji } from 'qrcode-generator-ts/js';\r\nimport { QRData } from \"qrcode-generator-ts/js/qrcode/QRData\";\r\n\r\nexport class RefferingController implements PageController {\r\n    private page: Page;\r\n\r\n    /**\r\n     * Konstruktor des Seitenverwalters. Registriert sich als Beobachter auf seiner Seite und setzt den start Status. \r\n     */\r\n    constructor() {\r\n        this.page = new ReferringPage({});\r\n        this.page.attach(this);\r\n    }\r\n\r\n    /**\r\n     * Die Update Methode des Seitenverwalters.\r\n     */\r\n    update() {\r\n        let currentState: States = this.page.getState();\r\n        switch (currentState) {\r\n            case States.NeedQR:\r\n                this.createQR();\r\n                break;\r\n            case States.Login:\r\n                this.login();\r\n                break;\r\n            case States.NewProjekt:\r\n                this.createNewProject();\r\n                break;\r\n            case States.LoadModel:\r\n                this.loadModel();\r\n                break;\r\n            case States.SetLanguage:\r\n                let languageCode = this.page.getState().languageCode;\r\n                //this.page.languageChanged(MainController.getInstance().setLanguage(languageCode));\r\n                break;\r\n            case States.NeedMessage:\r\n                let ids = this.page.getState().messageIDs;\r\n                this.page.getState().messages = MainController.getInstance().getMessage(ids);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    login() {\r\n        let loginData: string[] = this.page.getState().loginData;\r\n        let loginSucess: boolean = false;//MainController.getInstance().getFacade().loginAdmin(loginData[0], loginData[0]);\r\n        if (loginSucess) {\r\n            let projectMeta: { projectID: number; projectName: string; }[] = [{ projectID: 1, projectName: \"w\" }]; //MainController.getInstance().getFacade().getProjectMetas();\r\n            this.page.getState().projectMeta = projectMeta;\r\n            this.page.setState(\"loggedIn\");\r\n        } else {\r\n            this.page.setState(\"loginFailed\");\r\n        }\r\n    }\r\n\r\n    createQR() {\r\n        let link: string = \"test\"; //MainController.getInstance().getFacade().getDataMinerLink();\r\n\r\n        var qr = new QRCode();\r\n        qr.setTypeNumber(5);\r\n        qr.setErrorCorrectLevel(ErrorCorrectLevel.L);\r\n        qr.addData(link);\r\n        qr.make();\r\n\r\n        this.page.setState(States.ShowQR);\r\n    }\r\n\r\n    createNewProject() {\r\n        let sucess: boolean = false;//MainController.getInstance().getFacade().createProject(this.page.getState().toLoadProjectID);\r\n        if (sucess) {\r\n            this.page.setState(\"needQR\");\r\n        } else {\r\n            this.page.setState(\"ProjectError\");\r\n        }\r\n    }\r\n\r\n    loadProject() {\r\n        let projectId: number = this.page.getState().toLoadProjectID;\r\n        let sucess: boolean = false;//MainController.getInstance().getFacade().loadProject(projectId);\r\n        if (sucess) {\r\n            this.page.setState(\"needQR\");\r\n        } else {\r\n            this.page.setState(\"ProjectError\");\r\n        }\r\n    }\r\n\r\n    loadModel() {\r\n        let projectId: number = this.page.getState().toLoadProjectID;\r\n        let sucess: boolean = false;// MainController.getInstance().getFacade().loadProject(projectId);\r\n        if (sucess) {\r\n            //let aiController: AIController = new AIController();\r\n            //MainController.getInstance().changeTo(aiController);\r\n        } else {\r\n            this.page.setState(\"ProjectError\");\r\n        }\r\n    }\r\n\r\n    changeToVisualization() {\r\n        //let visualizationController: VisualizationController = new VisualizationController();\r\n        //MainController.getInstance().changeTo(visualizationController);\r\n    }\r\n}","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx",[],"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx",[],"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx",["90","91","92"],"import React, { Component } from 'react';\nimport ConstantsText from '../../components/ReferringComponents/ConstantsText';\nimport NewProjectButton from '../../components/ReferringComponents/NewProjectButton';\nimport LoginButton from '../../components/ReferringComponents/LoginButton';\nimport LoadModelButton from '../../components/ReferringComponents/LoadModelButton';\nimport { Page } from \"../PageInterface\";\nimport { PageController } from \"../../../controller/PageController\";\nimport { State } from \"./State\";\nimport { MainController } from '../../../controller/MainController';\nimport ReactDOM from 'react-dom';\n\ntype Props = {\n};\n\nexport class ReferringPage extends React.Component<Props, State> implements Page {\n\n    observer: PageController[] = [];\n    state: State = new State();\n\n    constructor(props: Props) {\n        super(props);\n        this.render();\n    }\n\n\n    render() {\n        ReactDOM.render(<div>\n            <ConstantsText />\n            <NewProjectButton />\n            <LoginButton />\n            <LoadModelButton />\n        </div>, document.getElementById('root'));\n\n        return (\n            <div>\n                <ConstantsText />\n                <NewProjectButton />\n                <LoginButton />\n                <LoadModelButton />\n            </div>\n        );\n    }\n\n    attach(observer: PageController) {\n        this.observer.push(observer);\n    }\n\n    detach() {\n        //todo\n    }\n\n    notify() {\n        for (let index = 0; index < this.observer.length; index++) {\n            const element = this.observer[index];\n            element.update();\n        }\n\n    }\n\n    getState() {\n        return this.state;\n    }\n\n    setState(state: State) {\n        this.state = state;\n    }\n}\n","C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginButton\\index.tsx",[],"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx",[],"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx",[],"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx",[],"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx",[],"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx",[],"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx",[],"C:\\Users\\Dariu\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx",[],["93","94"],{"ruleId":"95","severity":1,"message":"96","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":13},{"ruleId":"95","severity":1,"message":"99","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":16},{"ruleId":"95","severity":1,"message":"100","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":11},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":13},{"ruleId":"95","severity":1,"message":"105","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":12},{"ruleId":"106","severity":1,"message":"107","line":26,"column":29,"nodeType":"108","messageId":"109","endLine":26,"endColumn":31},{"ruleId":"95","severity":1,"message":"110","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":15},{"ruleId":"95","severity":1,"message":"111","line":8,"column":37,"nodeType":"97","messageId":"98","endLine":8,"endColumn":45},{"ruleId":"95","severity":1,"message":"112","line":8,"column":47,"nodeType":"97","messageId":"98","endLine":8,"endColumn":57},{"ruleId":"95","severity":1,"message":"113","line":8,"column":59,"nodeType":"97","messageId":"98","endLine":8,"endColumn":69},{"ruleId":"95","severity":1,"message":"114","line":8,"column":71,"nodeType":"97","messageId":"98","endLine":8,"endColumn":78},{"ruleId":"95","severity":1,"message":"115","line":9,"column":10,"nodeType":"97","messageId":"98","endLine":9,"endColumn":16},{"ruleId":"95","severity":1,"message":"116","line":41,"column":21,"nodeType":"97","messageId":"98","endLine":41,"endColumn":33},{"ruleId":"95","severity":1,"message":"117","line":54,"column":13,"nodeType":"97","messageId":"98","endLine":54,"endColumn":32},{"ruleId":"95","severity":1,"message":"118","line":87,"column":13,"nodeType":"97","messageId":"98","endLine":87,"endColumn":30},{"ruleId":"95","severity":1,"message":"118","line":97,"column":13,"nodeType":"97","messageId":"98","endLine":97,"endColumn":30},{"ruleId":"95","severity":1,"message":"119","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"120","line":9,"column":10,"nodeType":"97","messageId":"98","endLine":9,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":65,"column":9,"nodeType":"123","endLine":65,"endColumn":13},{"ruleId":"101","replacedBy":"124"},{"ruleId":"103","replacedBy":"125"},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'App' is defined but never used.","no-native-reassign",["126"],"no-negated-in-lhs",["127"],"'logo' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'State' is defined but never used.","'QRNumber' is defined but never used.","'QRAlphaNum' is defined but never used.","'QR8BitByte' is defined but never used.","'QRKanji' is defined but never used.","'QRData' is defined but never used.","'languageCode' is assigned a value but never used.","'loginData' is assigned a value but never used.","'projectId' is assigned a value but never used.","'Component' is defined but never used.","'MainController' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression",["126"],["127"],"no-global-assign","no-unsafe-negation"]