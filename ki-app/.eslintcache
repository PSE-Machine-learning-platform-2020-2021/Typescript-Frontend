[{"D:\\main1\\Typescript-Frontend\\ki-app\\src\\index.tsx":"1","D:\\main1\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts":"2","D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx":"3","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx":"4","D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx":"5","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\State.tsx":"6","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Language.tsx":"7","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DatabaseConnector.tsx":"8","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\User.tsx":"9","D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\DeliveryController.tsx":"10","D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\VisualizationController.tsx":"11","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Device.tsx":"12","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx":"13","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\index.tsx":"14","D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\ModelCreationController.tsx":"15","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\index.tsx":"16","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Project.tsx":"17","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx":"18","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Sensor.tsx":"19","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\State.tsx":"20","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DataSet.tsx":"21","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\State.tsx":"22","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Session.tsx":"23","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\AIModel.tsx":"24","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\index.tsx":"25","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx":"26","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx":"27","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx":"28","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginWindow\\index.tsx":"29","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\DownloadButton\\index.tsx":"30","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\SendButton\\index.tsx":"31","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\EmailList\\index.jsx":"32","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\AddEmailButton\\index.jsx":"33","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\HandleAllEmail\\index.jsx":"34","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DataRow.tsx":"35","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Label.tsx":"36","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\ShowImage\\index.tsx":"37","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\TrainButton\\index.tsx":"38","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\ImageList\\index.tsx":"39","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\State.tsx":"40","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DataPoint.tsx":"41","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\TimeSpan.tsx":"42","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\FeatureList\\index.tsx":"43","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\ModelTypeList\\index.tsx":"44","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\NormalizationList\\index.tsx":"45","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\ImputationList\\index.tsx":"46","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx":"47","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ChangeToVisuBtn\\index.tsx":"48","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx":"49","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx":"50","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\AddDatasetButton\\index.jsx":"51","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\DatasetList\\index.jsx":"52","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\EmailItem\\index.jsx":"53","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx":"54","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\DatasetItem\\index.jsx":"55","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\index.tsx":"56","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts":"57","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx":"58","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx":"59","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx":"60","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\State.tsx":"61","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\DeliveryController.tsx":"62","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\VisualizationController.tsx":"63","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\DatabaseConnector.tsx":"64","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\User.tsx":"65","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Language.tsx":"66","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx":"67","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\ModelCreationController.tsx":"68","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\index.tsx":"69","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\index.tsx":"70","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Device.tsx":"71","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Project.tsx":"72","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx":"73","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\State.tsx":"74","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\State.tsx":"75","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\index.tsx":"76","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Session.tsx":"77","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\AIModel.tsx":"78","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Sensor.tsx":"79","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\DataSet.tsx":"80","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx":"81","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx":"82","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx":"83","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginWindow\\index.tsx":"84","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\SendButton\\index.tsx":"85","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\DownloadButton\\index.tsx":"86","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\TrainButton\\index.tsx":"87","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\ImageList\\index.tsx":"88","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\ShowImage\\index.tsx":"89","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\State.tsx":"90","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\DataRow.tsx":"91","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Label.tsx":"92","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\AddEmailButton\\index.jsx":"93","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\EmailList\\index.jsx":"94","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\HandleAllEmail\\index.jsx":"95","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\ImputationList\\index.tsx":"96","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\NormalizationList\\index.tsx":"97","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\FeatureList\\index.tsx":"98","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\ModelTypeList\\index.tsx":"99","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\DataPoint.tsx":"100","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\TimeSpan.tsx":"101","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\AddDatasetButton\\index.jsx":"102","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\DatasetList\\index.jsx":"103","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx":"104","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx":"105","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ChangeToVisuBtn\\index.tsx":"106","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx":"107","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\EmailItem\\index.jsx":"108","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\DatasetItem\\index.jsx":"109","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx":"110"},{"size":480,"mtime":1613136673047,"results":"111","hashOfConfig":"112"},{"size":440,"mtime":1613136674313,"results":"113","hashOfConfig":"112"},{"size":3062,"mtime":1613496971417,"results":"114","hashOfConfig":"112"},{"size":16882,"mtime":1613496971995,"results":"115","hashOfConfig":"112"},{"size":6153,"mtime":1613497216255,"results":"116","hashOfConfig":"112"},{"size":3600,"mtime":1613497216271,"results":"117","hashOfConfig":"112"},{"size":1875,"mtime":1613496972051,"results":"118","hashOfConfig":"112"},{"size":14207,"mtime":1613497322582,"results":"119","hashOfConfig":"112"},{"size":14228,"mtime":1613496972185,"results":"120","hashOfConfig":"112"},{"size":2285,"mtime":1613496971273,"results":"121","hashOfConfig":"112"},{"size":3510,"mtime":1613496971685,"results":"122","hashOfConfig":"112"},{"size":1767,"mtime":1613315191241,"results":"123","hashOfConfig":"112"},{"size":5832,"mtime":1613496972873,"results":"124","hashOfConfig":"112"},{"size":3301,"mtime":1613259346061,"results":"125","hashOfConfig":"112"},{"size":1451,"mtime":1613496971459,"results":"126","hashOfConfig":"112"},{"size":2241,"mtime":1613497216255,"results":"127","hashOfConfig":"112"},{"size":7572,"mtime":1613496972129,"results":"128","hashOfConfig":"112"},{"size":820,"mtime":1613489224210,"results":"129","hashOfConfig":"112"},{"size":5849,"mtime":1613315191572,"results":"130","hashOfConfig":"112"},{"size":384,"mtime":1613231544891,"results":"131","hashOfConfig":"112"},{"size":6394,"mtime":1613315191139,"results":"132","hashOfConfig":"112"},{"size":297,"mtime":1613495999735,"results":"133","hashOfConfig":"112"},{"size":1581,"mtime":1613317369311,"results":"134","hashOfConfig":"112"},{"size":485,"mtime":1613141165378,"results":"135","hashOfConfig":"112"},{"size":3163,"mtime":1613496972395,"results":"136","hashOfConfig":"112"},{"size":975,"mtime":1613434828475,"results":"137","hashOfConfig":"112"},{"size":484,"mtime":1613338796154,"results":"138","hashOfConfig":"112"},{"size":229,"mtime":1613136676421,"results":"139","hashOfConfig":"112"},{"size":3005,"mtime":1613437588001,"results":"140","hashOfConfig":"112"},{"size":380,"mtime":1613136674887,"results":"141","hashOfConfig":"112"},{"size":372,"mtime":1613136675176,"results":"142","hashOfConfig":"112"},{"size":635,"mtime":1613259346472,"results":"143","hashOfConfig":"112"},{"size":1247,"mtime":1613234510355,"results":"144","hashOfConfig":"112"},{"size":914,"mtime":1613136675110,"results":"145","hashOfConfig":"112"},{"size":3361,"mtime":1613315191061,"results":"146","hashOfConfig":"112"},{"size":1787,"mtime":1613141165915,"results":"147","hashOfConfig":"112"},{"size":700,"mtime":1613495999701,"results":"148","hashOfConfig":"112"},{"size":327,"mtime":1613136676335,"results":"149","hashOfConfig":"112"},{"size":1760,"mtime":1613496323194,"results":"150","hashOfConfig":"112"},{"size":578,"mtime":1613136678280,"results":"151","hashOfConfig":"112"},{"size":927,"mtime":1613141165498,"results":"152","hashOfConfig":"112"},{"size":1370,"mtime":1613141166127,"results":"153","hashOfConfig":"112"},{"size":1442,"mtime":1613136676068,"results":"154","hashOfConfig":"112"},{"size":1200,"mtime":1613136676212,"results":"155","hashOfConfig":"112"},{"size":1274,"mtime":1613136676269,"results":"156","hashOfConfig":"112"},{"size":1093,"mtime":1613136676134,"results":"157","hashOfConfig":"112"},{"size":514,"mtime":1613341342032,"results":"158","hashOfConfig":"112"},{"size":397,"mtime":1613435433589,"results":"159","hashOfConfig":"112"},{"size":3090,"mtime":1613489224271,"results":"160","hashOfConfig":"112"},{"size":646,"mtime":1613341342037,"results":"161","hashOfConfig":"112"},{"size":2573,"mtime":1613136675854,"results":"162","hashOfConfig":"112"},{"size":666,"mtime":1613136675989,"results":"163","hashOfConfig":"112"},{"size":1168,"mtime":1613252016992,"results":"164","hashOfConfig":"112"},{"size":1870,"mtime":1613497390376,"results":"165","hashOfConfig":"112"},{"size":1021,"mtime":1613136675920,"results":"166","hashOfConfig":"112"},{"size":480,"mtime":1613146123193,"results":"167","hashOfConfig":"168"},{"size":440,"mtime":1613146123200,"results":"169","hashOfConfig":"168"},{"size":3062,"mtime":1613491611442,"results":"170","hashOfConfig":"168"},{"size":6153,"mtime":1613497745951,"results":"171","hashOfConfig":"168"},{"size":16890,"mtime":1613580501134,"results":"172","hashOfConfig":"168"},{"size":3600,"mtime":1613497745956,"results":"173","hashOfConfig":"168"},{"size":2285,"mtime":1613491611441,"results":"174","hashOfConfig":"168"},{"size":3510,"mtime":1613491611449,"results":"175","hashOfConfig":"168"},{"size":14335,"mtime":1613580737961,"results":"176","hashOfConfig":"168"},{"size":14228,"mtime":1613491631621,"results":"177","hashOfConfig":"168"},{"size":1875,"mtime":1613491631620,"results":"178","hashOfConfig":"168"},{"size":5832,"mtime":1613497745956,"results":"179","hashOfConfig":"168"},{"size":1451,"mtime":1613491611443,"results":"180","hashOfConfig":"168"},{"size":3301,"mtime":1613390799834,"results":"181","hashOfConfig":"168"},{"size":2241,"mtime":1613497745957,"results":"182","hashOfConfig":"168"},{"size":1767,"mtime":1613280191748,"results":"183","hashOfConfig":"168"},{"size":7572,"mtime":1613491631620,"results":"184","hashOfConfig":"168"},{"size":820,"mtime":1613497745955,"results":"185","hashOfConfig":"168"},{"size":384,"mtime":1613280195769,"results":"186","hashOfConfig":"168"},{"size":297,"mtime":1613497745957,"results":"187","hashOfConfig":"168"},{"size":3163,"mtime":1613491611467,"results":"188","hashOfConfig":"168"},{"size":1581,"mtime":1613291060196,"results":"189","hashOfConfig":"168"},{"size":485,"mtime":1613280191739,"results":"190","hashOfConfig":"168"},{"size":5849,"mtime":1613280192344,"results":"191","hashOfConfig":"168"},{"size":6394,"mtime":1613280191746,"results":"192","hashOfConfig":"168"},{"size":484,"mtime":1613390799831,"results":"193","hashOfConfig":"168"},{"size":229,"mtime":1613146123225,"results":"194","hashOfConfig":"168"},{"size":975,"mtime":1613491611461,"results":"195","hashOfConfig":"168"},{"size":3005,"mtime":1613491611456,"results":"196","hashOfConfig":"168"},{"size":372,"mtime":1613146123209,"results":"197","hashOfConfig":"168"},{"size":380,"mtime":1613146123206,"results":"198","hashOfConfig":"168"},{"size":327,"mtime":1613146123224,"results":"199","hashOfConfig":"168"},{"size":1760,"mtime":1613497745953,"results":"200","hashOfConfig":"168"},{"size":700,"mtime":1613497745955,"results":"201","hashOfConfig":"168"},{"size":578,"mtime":1613146123248,"results":"202","hashOfConfig":"168"},{"size":3361,"mtime":1613280191744,"results":"203","hashOfConfig":"168"},{"size":1787,"mtime":1613280192336,"results":"204","hashOfConfig":"168"},{"size":1247,"mtime":1613280195764,"results":"205","hashOfConfig":"168"},{"size":635,"mtime":1613390799829,"results":"206","hashOfConfig":"168"},{"size":914,"mtime":1613146123208,"results":"207","hashOfConfig":"168"},{"size":1093,"mtime":1613146123222,"results":"208","hashOfConfig":"168"},{"size":1274,"mtime":1613146123223,"results":"209","hashOfConfig":"168"},{"size":1442,"mtime":1613146123222,"results":"210","hashOfConfig":"168"},{"size":1200,"mtime":1613146123223,"results":"211","hashOfConfig":"168"},{"size":927,"mtime":1613280191742,"results":"212","hashOfConfig":"168"},{"size":1370,"mtime":1613280192349,"results":"213","hashOfConfig":"168"},{"size":2573,"mtime":1613146123219,"results":"214","hashOfConfig":"168"},{"size":666,"mtime":1613146123221,"results":"215","hashOfConfig":"168"},{"size":3090,"mtime":1613491611464,"results":"216","hashOfConfig":"168"},{"size":646,"mtime":1613390799830,"results":"217","hashOfConfig":"168"},{"size":397,"mtime":1613491611453,"results":"218","hashOfConfig":"168"},{"size":514,"mtime":1613390799834,"results":"219","hashOfConfig":"168"},{"size":1168,"mtime":1613280195764,"results":"220","hashOfConfig":"168"},{"size":1021,"mtime":1613146123220,"results":"221","hashOfConfig":"168"},{"size":1870,"mtime":1613497745952,"results":"222","hashOfConfig":"168"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"yiqgwz",{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"336"},"fl9nei",{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"336"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"336"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"336"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"336"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"336"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"336"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"336"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"336"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"336"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"336"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"336"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"336"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"336"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"336"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},"D:\\main1\\Typescript-Frontend\\ki-app\\src\\index.tsx",["460","461"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx",["462","463"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx",["464","465","466","467","468","469","470","471"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\State.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Language.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DatabaseConnector.tsx",["472"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\User.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\DeliveryController.tsx",["473","474"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\VisualizationController.tsx",["475"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Device.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx",["476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\index.tsx",["492","493","494","495","496","497","498"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\ModelCreationController.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\index.tsx",["499","500","501","502","503","504"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Project.tsx",["505"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx",["506","507","508","509","510","511"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Sensor.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\State.tsx",["512"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DataSet.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\State.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Session.tsx",["513"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\AIModel.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\index.tsx",["514"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginWindow\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\DownloadButton\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\SendButton\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\EmailList\\index.jsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\AddEmailButton\\index.jsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\HandleAllEmail\\index.jsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DataRow.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Label.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\ShowImage\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\TrainButton\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\ImageList\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\State.tsx",["515"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DataPoint.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\TimeSpan.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\FeatureList\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\ModelTypeList\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\NormalizationList\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\ImputationList\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ChangeToVisuBtn\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx",["516","517","518","519","520"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\AddDatasetButton\\index.jsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\DatasetList\\index.jsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\EmailItem\\index.jsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\DatasetItem\\index.jsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\index.tsx",["521","522"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { MainController } from './controller/MainController';\r\n\r\nMainController.getInstance().startApp();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["523","524"],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx",["525","526"],"import { PageController } from \"./PageController\";\r\nimport { RefferingController } from \"./ReferringController\";\r\nimport { MainControllerInterface } from \"./MainControllerInterface\";\r\nimport { IState, States } from \"../view/pages/State\";\r\nimport { Facade } from \"../model/Facade\";\r\nimport { StartController } from \"./StartController\";\r\n\r\nexport class MainController implements MainControllerInterface {\r\n  private facade: Facade;\r\n\r\n  private static mainController: MainController;\r\n\r\n  private currentPageController: PageController | undefined;\r\n\r\n  /**\r\n   * Konstruktor des MainControllers. Holt sich die Fassade.\r\n   */\r\n  constructor() {\r\n    this.facade = new Facade(\"de-de\");\r\n  }\r\n\r\n  /**\r\n   * Gibt sich selber zurück und sorgt dafür das nur ein MainController besteht.\r\n   * @returns MainController\r\n   */\r\n  static getInstance() {\r\n    if (this.mainController === undefined) {\r\n      this.mainController = new MainController();\r\n      return this.mainController;\r\n    }\r\n    return this.mainController;\r\n  }\r\n\r\n  /**\r\n   * Prüft ob das Gerät auf das Internet zugreifen kann.\r\n   * @returns Gibt true zurück falls eine Internetverbindung besteht, sonst wird false zurück gegeben.\r\n   */\r\n  checkConnection() {\r\n    return window.navigator.onLine;\r\n  }\r\n\r\n  /**\r\n   * Prüft ob der Benutzer angemeldet ist.\r\n   * @returns Gibt true zurück falls der Benutzer angemeldet ist, sonst wird false zurück gegeben.\r\n   */\r\n  checkLoginStatus() {\r\n    return false;//this.facade.checkLogin();\r\n  }\r\n\r\n  // static getSession() {\r\n  //    return false\r\n  //}\r\n\r\n  /**\r\n   * Setzt den momentanen Seitenverwalter neu\r\n   * @param destinationPageController Der neue Seitenverwalter\r\n   */\r\n  changeTo(destinationPageController: PageController) {\r\n    this.currentPageController = destinationPageController;\r\n  }\r\n\r\n  /**\r\n   * Andwendungstart für einen Desktop\r\n   */\r\n  startApp() {\r\n    let refferingController: RefferingController = new RefferingController();\r\n    this.changeTo(refferingController);\r\n  }\r\n\r\n  /**\r\n   * @returns Gibt die Fassade zurück\r\n   */\r\n  getFacade() {\r\n    return this.facade;\r\n  }\r\n\r\n  /**\r\n   * @param ids Alle ids, zu denen man die Texte möchte.\r\n   * @returns Gibt alle texte zu den übergebenen ids zurück.\r\n   */\r\n  getMessage(messages: { text: string, id: number; }[]) {\r\n    let messageIDs: number[] = [];\r\n    for (let index = 0; index < messages.length; index++) {\r\n      messageIDs.push(messages[index].id);\r\n    }\r\n    let texts: string[] = [];\r\n    for (let index = 0; index < messages.length; index++) {\r\n      messages[index].text = texts[index];\r\n      return messages;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param languageCode Das Sprachkürzel als string.\r\n   * @returns Gibt true zurück falls der wechsel erfolgt ist, sonst false.\r\n   */\r\n  setLanguage(languageCode: string) {\r\n    let nextState: States;\r\n    let success = this.getFacade().setLanguage(languageCode);\r\n    if (success) {\r\n      nextState = States.NeedMessage;\r\n    } else {\r\n      nextState = States.LoadError;\r\n    }\r\n    return nextState;\r\n  }\r\n}\r\n","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx",["527","528","529","530","531","532","533","534"],"import { Page } from \"../view/pages/PageInterface\";\r\nimport { IState, States } from \"../view/pages/State\";\r\nimport { PageController } from \"./PageController\";\r\nimport { MainController } from \"./MainController\";\r\nimport { DeliveryController } from \"./DeliveryController\";\r\nimport { VisualizationController } from \"./VisualizationController\";\r\nimport { VisualizationPage } from \"../view/pages/VisualizationPage\";\r\nimport { ReferringPage } from \"../view/pages/ReferringPage\";\r\nimport { QRCode, ErrorCorrectLevel, QRNumber, QRAlphaNum, QR8BitByte, QRKanji } from 'qrcode-generator-ts/js';\r\nimport { StartPage } from \"../view/pages/StartPage\";\r\n\r\n\r\nexport class RefferingController implements PageController {\r\n    private page: Page;\r\n    private state: IState;\r\n\r\n    /**\r\n     * Konstruktor des Seitenverwalters. Registriert sich als Beobachter auf seiner Seite und setzt den Start Status. \r\n     */\r\n    constructor() {\r\n        this.page = new ReferringPage({});\r\n        this.page.attach(this);\r\n        this.state = this.page.getState();\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Die Update Methode des Seitenverwalters.\r\n     */\r\n    update() {\r\n        this.state = this.page.getState();\r\n        switch (this.state.currentState) {\r\n            case States.LoadProject:\r\n                this.loadProject();\r\n                break;\r\n            case States.NeedQRC:\r\n                this.createQR();\r\n                break;\r\n            case States.Register:\r\n                this.register();\r\n                break;\r\n            case States.Login:\r\n                this.login();\r\n                break;\r\n            case States.NewProjekt:\r\n                this.createNewProject();\r\n                break;\r\n            case States.LoadProject:\r\n                this.loadProject();\r\n                break;\r\n            case States.LoadModel:\r\n                this.loadModel();\r\n                break;\r\n            case States.SetLanguage:\r\n                this.page.setState(MainController.getInstance().setLanguage(this.state.languageCode));\r\n                break;\r\n            case States.NeedMessage:\r\n                this.page.setState(MainController.getInstance().getMessage(this.state.messages));\r\n                break;\r\n            case States.Register:\r\n                this.register();\r\n                break;\r\n            case States.ChangeToVisual:\r\n                MainController.getInstance().changeTo(new VisualizationController(this.state.currentProject!));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Logt den Benutzer ein\r\n     */\r\n    login() {\r\n        let adminData: { name: string, email: string, password: string; } = this.state.adminData!;\r\n        let loginSucess: Promise<boolean> = MainController.getInstance().getFacade().loginAdmin(adminData.email, adminData.password);\r\n        loginSucess.then((value: boolean) => {\r\n            if (value) {\r\n                let projectData: Promise<{ projectID: number; projectName: string; AIModelID: number[]; }[]> = MainController.getInstance().getFacade().getProjectMetas();\r\n                projectData.then((data: { projectID: number; projectName: string; AIModelID: number[]; }[]) => {\r\n                    this.state.projectData! = data\r\n                })\r\n\r\n            } else {\r\n                this.state.currentState = States.LoginFail;\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Registriert den Benutzer\r\n     */\r\n    register() {\r\n        let adminData: { name: string, email: string, password: string; } = this.state.adminData!;\r\n        let loginSucess: Promise<boolean> = MainController.getInstance().getFacade().registerAdmin(adminData.name, adminData.email, adminData.password);\r\n        loginSucess.then((value: boolean) => {\r\n            if (!value) {\r\n                this.state.currentState = States.LoginFail;\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Erstellt ein QRCode und übergibt in an die Seite\r\n     */\r\n    createQR() {\r\n        const url = new URL(document.URL);\r\n        url.searchParams.append(\"SessionID\", MainController.getInstance().getFacade().getSessionID().toString());\r\n        let link: string = url.toString()\r\n        var qr = new QRCode();\r\n        qr.setTypeNumber(5);\r\n        qr.setErrorCorrectLevel(ErrorCorrectLevel.L);\r\n        qr.addData(link);\r\n        qr.make();\r\n        this.state.qr = qr.toDataURL();\r\n        this.state.currentState = States.SetQRC;\r\n    }\r\n\r\n    /**\r\n     * Erstelle ein neues Projekt, welches auch als momentanes Projekt gesetzt wird.\r\n     */\r\n    createNewProject() {\r\n        let sucess: Promise<boolean> = MainController.getInstance().getFacade().createProject(this.state.currentProject!.projectName);\r\n        sucess.then((value: boolean) => {\r\n            if (value) {\r\n                this.state.currentState = States.NeedQRC;\r\n            } else {\r\n                this.state.currentState = States.LoadError;\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Setzt ein Projekt als momentanes Projekt\r\n     */\r\n    loadProject() {\r\n        let projectId: number = this.state.currentProject!.projectID!;\r\n        let sucess: Promise<boolean> = MainController.getInstance().getFacade().loadProject(projectId);\r\n        sucess.then((value: boolean) => {\r\n            if (value) {\r\n                this.state.currentState = States.NeedQRC;\r\n            } else {\r\n                this.state.currentState = States.LoadError;\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Läde ein Modell und wechselt zur delivery Seite\r\n     */\r\n    loadModel() {\r\n        let projectId: number = this.state.currentProject!.projectID;\r\n        let sucess: Promise<boolean> = MainController.getInstance().getFacade().loadProject(projectId);\r\n        sucess.then((value: boolean) => {\r\n            if (value) {\r\n                let deliveryConroller: DeliveryController = new DeliveryController(this.state.currentProject!);\r\n                MainController.getInstance().changeTo(deliveryConroller);\r\n            } else {\r\n                this.state.currentState = States.LoadError;\r\n            }\r\n        })\r\n    }\r\n}","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\State.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\DeliveryController.tsx",["535","536"],"import { PageController } from \"./PageController\";\r\nimport { MainController } from \"./MainController\";\r\nimport { Page } from \"../view/pages/PageInterface\";\r\nimport { IState, States } from \"../view/pages/State\";\r\nimport { DeliveryPage } from \"../view/pages/DeliveryPage/index\";\r\n\r\nexport class DeliveryController implements PageController {\r\n\r\n    private page: Page;\r\n    private state: IState;\r\n\r\n    /**\r\n    * Konstruktor des Seitenverwalters. Registriert sich als Beobachter auf seiner Seite und setzt den start Status.\r\n    * @param currentProject Die momentanen Projectdaten für welches man ein Model ausliefern möchte. \r\n    */\r\n    constructor(currentProject: { projectID: number, projectName: string, choosenAIModelID: number; }) {\r\n        this.page = new DeliveryPage({});\r\n        this.page.attach(this);\r\n        this.state = this.page.getState()\r\n        this.state.currentProject = currentProject\r\n        this.page.setState(this.state)\r\n    }\r\n\r\n    /**\r\n    * Die Update Methode des Seitenverwalters.\r\n    */\r\n    update() {\r\n        this.state = this.page.getState();\r\n        switch (this.state.currentState) {\r\n            case States.DeliverWeb:\r\n                this.deliverAsWebApp();\r\n                break;\r\n            case States.NeedMessage:\r\n                this.page.setState(MainController.getInstance().getMessage(this.state.messages));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Holt sich aus dem Status alle angegebene Email-Adressen und gibt diese mit Daten zum Projekt an die Fassade welche eine Email an alle Adressen sendet.\r\n    * Der Inhalt der Email gibt zugriff auf das Modell zur klassifizierung.\r\n    */\r\n    deliverAsWebApp() {\r\n        //let emails: string[] = this.page.getEMails();\r\n        let emails: string[] = [\"Darius.Seiter@outlook.com\"]\r\n        //let text: string = MainController.getInstance().getFacade().getDeliverText();\r\n        let text: string = \"TEST\"\r\n        for (let index = 0; index < emails.length; index++) {\r\n            const element: string = emails[index];\r\n            //MainController.getInstance().getFacade().sendMail(element, this.state.currentProject);\r\n        }\r\n    }\r\n\r\n    deliverAsExe() {\r\n        //todo in Quality Controll\r\n    }\r\n}","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\VisualizationController.tsx",["537"],"import { PageController } from \"./PageController\";\r\nimport { VisualizationPage } from \"../view/pages/VisualizationPage/index\";\r\nimport { MainController } from \"./MainController\";\r\nimport { ModelCreationController } from \"./ModelCreationController\";\r\nimport { Page } from \"../view/pages/PageInterface\";\r\nimport { IState, States } from \"../view/pages/State\";\r\nimport { State } from \"../view/pages/DeliveryPage/State\";\r\n\r\nexport class VisualizationController implements PageController {\r\n    private page: Page;\r\n    private state: IState;\r\n\r\n    /**\r\n     * Konstruktor des Seitenverwalters. Registriert sich als Beobachter auf seiner Seite und setzt den start Status.\r\n     * Dieser Seitenverwalter benötigt einen SensorManager, welcher schon initilisiert wurde. \r\n     */\r\n    constructor(currentProjekt: { projectID: number, projectName: string, choosenAIModelID: number; }) {\r\n        this.page = new VisualizationPage({});\r\n        this.page.attach(this);\r\n        this.state = this.page.getState()\r\n        this.state.currentProject = currentProjekt\r\n        this.page.setState(this.state)\r\n    }\r\n\r\n    /**\r\n     * Die Update Methode des Seitenverwalters.\r\n     */\r\n    update() {\r\n        this.state = this.page.getState();\r\n        switch (this.state.currentState) {\r\n            case States.NeedMessage:\r\n                this.page.setState(MainController.getInstance().getMessage(this.state.messages));\r\n                break;\r\n            case States.ChangeToCreation:\r\n                MainController.getInstance().changeTo(new ModelCreationController())\r\n                break;\r\n            case States.ChangeLabel:\r\n                this.changeDataLabel();\r\n                break;\r\n            case States.NewLabel:\r\n                this.newDataLabel();\r\n                break;\r\n            case States.DeleteDataLabel:\r\n                this.deleteDataLabel();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    SetDataRows() {\r\n        let data = [this.state.dataSets!]//MainController.getInstance().getFacade().getMinerData();\r\n        for (let index = 0; index < data.length; index++) {\r\n            this.state.dataSets! = data[index];\r\n            this.state.currentState = States.SetDataRows\r\n            this.page.setState(this.state)\r\n        }\r\n    }\r\n\r\n    alertConnectionError() {\r\n        this.state.currentState = States.LoadError\r\n        this.page.setState(this.state)\r\n    }\r\n\r\n    /**\r\n     * Ändert die Einstellungen eines DatenLabels gemäß den Änderungen aus der momentanen Seite.\r\n     */\r\n    private changeDataLabel() {\r\n        let label = this.state.currentLabel!\r\n        MainController.getInstance().getFacade().setLabel(label.labelID, {start: label.start, end: label.end}, label.name);\r\n    }\r\n\r\n    /**\r\n     * Erstellt ein neues Datenlabel. Dafür werden die neuen Daten des Labels aus der momentanene Seite an das\r\n     * Modell geleitet. Die ID des neuen Labels wird darauf an die momentane Seite übergeben.\r\n     */\r\n    private newDataLabel() {\r\n        let label = this.state.currentLabel!\r\n        //label.labelID = MainController.getInstance().getFacade().creatLabel(label.start, label.end);\r\n        this.state.currentLabel! = label\r\n    }\r\n\r\n    /**\r\n     * Löscht das Label welches gemäß der Methode getDeleteLabelID von der momentanen Seite angegeben wurde.\r\n     */\r\n    private deleteDataLabel() {\r\n        //MainController.getInstance().getFacade().deleteLabel(this.state.currentLabel!.labelID);\r\n    }\r\n}","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\DatabaseConnector.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\User.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Language.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx",["538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553"],"import React, { Component } from 'react';\r\nimport PubSub from 'pubsub-js';\r\nimport ConstantsText from '../../components/ReferringComponents/ConstantsText';\r\nimport NewProjectButton from '../../components/ReferringComponents/NewProjectButton';\r\nimport LoadModelButton from '../../components/ReferringComponents/LoadModelButton';\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport ReactDOM from 'react-dom';\r\nimport { States } from '../State';\r\nimport LoginWindow from '../../components/ReferringComponents/LoginWindow';\r\n\r\ntype Props = {\r\n\r\n};\r\n\r\nexport class ReferringPage extends React.Component<Props, State> implements Page {\r\n\r\n    state = new State();\r\n    observers: PageController[] = [];\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.createNewProject()\r\n        this.register()\r\n        this.login()\r\n        this.getmodellist()\r\n        this.loadproject()\r\n        this.changetovisu()\r\n        this.loadmodel()\r\n        const VDOM = (\r\n            <div>\r\n                <ConstantsText />\r\n                <LoginWindow />\r\n                <NewProjectButton />\r\n                <LoadModelButton />\r\n            </div>\r\n        );\r\n        ReactDOM.render(VDOM, document.getElementById('root'));\r\n    }\r\n\r\n    attach(observer: PageController) {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    detach(observer: PageController) {\r\n        const index = this.observers.indexOf(observer, 0);\r\n        if (index > -1) {\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notify() {\r\n        for (let index = 0; index < this.observers.length; index++) {\r\n            const element = this.observers[index];\r\n            element.update();\r\n        }\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n    createNewProject() {\r\n        PubSub.subscribe('createnewproject', (_msg: any, data: string) => {\r\n            // console.log(this.state.currentState)\r\n            this.state.currentState = States.NewProjekt;\r\n            this.state.currentProject = { projectID: -10000, projectName: data, choosenAIModelID: -10000 }\r\n            //console.log(this.state.currentState)\r\n            //console.log(this.state.currentProject)\r\n            //console.log(this.state.currentState)\r\n            // console.log(this.state.qr)\r\n            //hier notifty for createnewProject\r\n            this.notify()\r\n            //console.log(this.state.currentState)\r\n            //console.log(this.state.qr)\r\n            //notify for needqr\r\n            this.notify()\r\n            //console.log(this.state.currentState)\r\n            //console.log(this.state.qr)\r\n            //console.log(this.state.currentState)\r\n            //console.log(this.state.qr)\r\n            PubSub.publish('getqr', this.state.qr)\r\n        })\r\n    }\r\n\r\n    register() {\r\n        PubSub.subscribe('register', (_msg: any, data: { name: string, email: string, password: string; }) => {\r\n            // console.log(this.state.currentState)\r\n            this.state.adminData = data\r\n            this.state.currentState = States.Register\r\n            //console.log(this.state.currentState)\r\n            this.notify()\r\n            //console.log(this.state.currentState)\r\n            let flag: boolean\r\n            if (this.state.currentState != States.Register) {\r\n                flag = false\r\n            } else {\r\n                flag = true\r\n            }\r\n            PubSub.publish('registerstatus', flag)\r\n\r\n        })\r\n    }\r\n\r\n    login() {\r\n        PubSub.subscribe('login', (_msg: any, data: { name: string, email: string, password: string; }) => {\r\n            // console.log(this.state.currentState)\r\n            this.state.adminData = data\r\n            this.state.currentState = States.Login\r\n            //console.log(this.state.currentState)\r\n            this.notify()\r\n            //console.log(this.state.currentState)\r\n            let flag: boolean\r\n            if (this.state.currentState != States.Login) {\r\n                flag = false\r\n            } else {\r\n                flag = true\r\n                PubSub.publish('getprojectlist', this.state.projectData)\r\n            }\r\n            PubSub.publish('loginstatus', flag)\r\n\r\n        })\r\n    }\r\n    getmodellist() {\r\n        PubSub.subscribe('needmodellist', (_msg: any, data: { projectID: number, projectName: string, AIModelID: number[]; }) => {\r\n            // console.log(this.state.currentState)\r\n            this.state.currentState = States.LoadProject\r\n            this.state.currentProject = { projectID: data.projectID, projectName: data.projectName, choosenAIModelID: -10000 }\r\n            //console.log(this.state.currentState)\r\n            this.notify()\r\n            //console.log(this.state.currentState)\r\n            PubSub.publish('getmodellist', this.state.projectData)\r\n\r\n        })\r\n    }\r\n    loadproject() {\r\n        PubSub.subscribe('loadproject', (_msg: any, data: { projectID: number, projectName: string, choosenAIModelID: number; }) => {\r\n            this.state.currentProject = { projectID: data.projectID, projectName: data.projectName, choosenAIModelID: -10000 }\r\n            this.state.currentState = States.NeedQRC\r\n            this.notify()\r\n            PubSub.publish('getqr', this.state.qr)\r\n        })\r\n    }\r\n    changetovisu() {\r\n        PubSub.subscribe('changetovisu', (_msg: any) => {\r\n            this.state.currentState = States.ChangeToVisual\r\n            this.notify()\r\n        })\r\n    }\r\n\r\n    loadmodel() {\r\n        PubSub.subscribe('loadmodel', (_msg: any, data: { projectID: number, projectName: string, choosenAIModelID: number; }) => {\r\n            this.state.currentProject = data\r\n            this.state.currentState = States.LoadModel\r\n            this.notify()\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\controller\\ModelCreationController.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\index.tsx",["554","555","556","557","558","559","560"],"import React, { Component } from 'react';\r\nimport AddEmailButton from '../../components/DeliveryComponents/AddEmailButton';\r\nimport DownloadButton from '../../components/DeliveryComponents/DownloadButton';\r\nimport EmailList from '../../components/DeliveryComponents/EmailList';\r\nimport HandleAllEmail from '../../components/DeliveryComponents/HandleAllEmail';\r\nimport SendButton from '../../components/DeliveryComponents/SendButton';\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport ReactDOM from 'react-dom';\r\n\r\ntype Props = {\r\n};\r\n\r\nexport class DeliveryPage extends React.Component<Props, State> implements Page {\r\n\r\n\tstate = new State();\r\n\tobservers: PageController[] = [];\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tconst VDOM = (\r\n\t\t\t<div className=\"deliverypage\">\r\n\t\t\t\t<div className=\"emailList-wrap\">\r\n\t\t\t\t\t<AddEmailButton addEmail={this.addEmail} deleteEmail={this.deleteEmail} />\r\n\t\t\t\t\t<EmailList emails={this.state.emails} updateEmail={this.updateEmail} deleteEmail={this.deleteEmail} />\r\n\t\t\t\t\t<HandleAllEmail emails={this.state.emails} chooseAllEmail={this.chooseAllEmail} clearAllChosen={this.clearAllChosen} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<DownloadButton />\r\n\t\t\t\t<SendButton />\r\n\t\t\t</div>\r\n\t\t);\r\n\t\tReactDOM.render(VDOM, document.getElementById('root'));\r\n\t}\r\n\r\n\tattach(observer: PageController) {\r\n\t\tthis.observers.push(observer);\r\n\t}\r\n\r\n\tdetach(observer: PageController) {\r\n\t\tconst index = this.observers.indexOf(observer, 0);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.observers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tnotify() {\r\n\t\tfor (let index = 0; index < this.observers.length; index++) {\r\n\t\t\tconst element = this.observers[index];\r\n\t\t\telement.update();\r\n\t\t}\r\n\t}\r\n\r\n\tgetState() {\r\n\t\treturn this.state;\r\n\t}\r\n\r\n\t//addEmail for add new Email\r\n\taddEmail = (emailObj: { id: string, address: string, chosen: boolean }) => {\r\n\t\t//get orignal emailList\r\n\r\n\t\t//add new one\r\n\t\tconst newEmails = [emailObj, ...this.state.emails];\r\n\t\t//update emailList\r\n\t\tthis.state.emails = newEmails\r\n\t};\r\n\r\n\t//updateEmail for update EmailList\r\n\tupdateEmail = (id: string, chosen: boolean) => {\r\n\t\t//get orignal EmailList\r\n\t\t//compare id\r\n\t\tconst newEmails = this.state.emails.map((emailObj) => {\r\n\t\t\tif (emailObj.id === id) return { ...emailObj, chosen };\r\n\t\t\telse return emailObj;\r\n\t\t});\r\n\t\tthis.state.emails = newEmails\r\n\t};\r\n\r\n\t//deleteEmail for delete emailObj\r\n\tdeleteEmail = (id: string) => {\r\n\t\t//get orignal emailList\r\n\t\t//delete emailObj with id\r\n\t\tconst newEmails = this.state.emails.filter((emailObj) => {\r\n\t\t\treturn emailObj.id !== id;\r\n\t\t});\r\n\t\t//update emailList\r\n\t\tthis.state.emails = newEmails\r\n\t};\r\n\r\n\t//checkAllEmail for all chosen email\r\n\tchooseAllEmail = (chosen: boolean) => {\r\n\t\t//get orignal emailList\r\n\t\t//traverse emailList\r\n\t\tconst newEmails = this.state.emails.map((emailObj) => {\r\n\t\t\treturn { ...emailObj, chosen };\r\n\t\t});\r\n\t\t//update emailList\r\n\t\tthis.state.emails = newEmails\r\n\t};\r\n\r\n\t//clearAllChosen for delete all emails\r\n\tclearAllChosen = () => {\r\n\t\t//get orignal emailList\r\n\t\tconst { emails } = this.state;\r\n\t\t//filter datas\r\n\t\tconst newEmails = this.state.emails.filter((emailObj) => {\r\n\t\t\treturn !emailObj.chosen;\r\n\t\t});\r\n\t\t//update emailLists\r\n\t\tthis.state.emails = newEmails\r\n\t};\r\n\r\n}\r\n","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\index.tsx",["561","562","563","564","565","566"],"import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js';\r\nimport TrainButton from '../../components/ModelCreationComponents/TrainButton'\r\nimport ImageList from '../../components/VisualizationComponents/ImageList'\r\nimport eximage1 from '../../images/exImage1.svg'\r\nimport './VisualizationPage.css'\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport { MainController } from '../../../controller/MainController';\r\nimport ReactDOM from 'react-dom';\r\nimport ShowImage from '../../components/VisualizationComponents/ShowImage';\r\nimport { States } from '../State';\r\n\r\ntype Props = {\r\n};\r\n\r\nexport class VisualizationPage extends React.Component<Props, State> implements Page {\r\n    state = new State()\r\n    observers: PageController[] = [];\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.getimagelist()\r\n        this.changetonextpage()\r\n        const VDOM = (\r\n            <div className=\"visualizationpage\">\r\n                <ShowImage />\r\n                <ImageList />\r\n                <TrainButton />\r\n            </div>\r\n        );\r\n        ReactDOM.render(VDOM, document.getElementById('root'));\r\n    }\r\n\r\n\r\n    attach(observer: PageController) {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    detach(observer: PageController) {\r\n        const index = this.observers.indexOf(observer, 0);\r\n        if (index > -1) {\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notify() {\r\n        for (let index = 0; index < this.observers.length; index++) {\r\n            const element = this.observers[index];\r\n            element.update();\r\n        }\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n    getimagelist() {\r\n        this.state.currentState = States.NeedImageList\r\n        this.notify()\r\n        PubSub.publish('getimagelist', this.state.imageList)\r\n    }\r\n\r\n    changetonextpage() {\r\n        PubSub.subscribe('changeimg', (_msg: any, data: string) => {\r\n            this.state.currentImg = data\r\n            this.state.currentState = States.ChangeToCreation\r\n            this.notify()\r\n            //console.log(this.state.img)\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Device.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Project.tsx",["567"],"import { AIModel } from \"./AIModel\";\r\nimport { DataSet } from \"./DataSet\";\r\nimport { SensorData } from \"./Sensor\";\r\nimport { Session } from \"./Session\";\r\nimport { Admin } from \"./User\";\r\n\r\n/**\r\n * Diese Klasse speichert alle Informationen zu einem Projekt.\r\n * Ein Projekt beinhaltet aufgezeichnete Datensätze (DataSet) sowie Informationen zu den Datensätzen.\r\n */\r\nexport class Project {\r\n  private id: number; //Die eindeutige Projekt ID\r\n  private name: string; //Der Name des Projektes\r\n  private session: Session; //Die Session in dem das Projekt arbeitet\r\n  private aiModel: AIModel[] = []; //Das AIModel von dem Projekt\r\n  private dataSet: DataSet[] = []; //Die Datensätze, die zu dem Projekt gehören\r\n  private currentDataSet?: DataSet; //Aktueller Datensatz\r\n\r\n  /**\r\n     * Eine bereits existierendes Projekt kann wie folgt in das Model geladen werden.\r\n     * @param projectID Die Projekt ID\r\n     * @param sessionID Die Session ID\r\n     * @param projectName Der Projektnamen\r\n     * @param admin Der Besitzer dieses Projekts für die Session\r\n     * @param aiModelID Die schon existierenden AIModel IDs\r\n     * @param dataSet Die schon existierenden Datensätze\r\n     */\r\n  constructor(projectID: number, sessionID: number, projectName: string, projectData?: {\r\n    aiModelID?: number[],\r\n    dataSet?: {\r\n      dataRowSensors: SensorData[], dataSetID: number, dataSetName: string, generateDate: number,\r\n      dataRows: {\r\n        dataRowID: number, recordingStart: number,\r\n        dataRow: { value: number, relativeTime: number; }[];\r\n      }[],\r\n      label: { name: string, labelID: number, start: number, end: number; }[];\r\n    }[];\r\n  }) {\r\n    this.id = projectID;\r\n    this.name = projectName;\r\n    this.session = new Session(sessionID);\r\n    if (projectData != null) {\r\n      if (projectData.aiModelID != null) {\r\n        for (let i = 0; i < projectData.aiModelID.length; i++) {\r\n          this.aiModel.push(new AIModel(projectData.aiModelID[i]));\r\n        }\r\n      }\r\n      if (projectData.dataSet != null) {\r\n        for (let i = 0; i < projectData.dataSet.length; i++) {\r\n          this.dataSet.push(new DataSet(projectData.dataSet[i].dataRowSensors, projectData.dataSet[i].dataSetID, projectData.dataSet[i].dataSetName, projectData.dataSet[i].generateDate, projectData.dataSet[i].dataRows, projectData.dataSet[i].label));\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Gibt den Projektnamen zurück\r\n   */\r\n  getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  /**\r\n   * Löscht den Datensatz mit der DatensatzID\r\n   * @param dataSetID die Datensatz ID\r\n   */\r\n  deleteDataSet(dataSetID: number): boolean {\r\n    for (let i = 0; i < this.dataSet.length; i++) {\r\n      if (this.dataSet[i].getID() === dataSetID) {\r\n        delete this.dataSet[i];\r\n        if (this.currentDataSet != null && this.currentDataSet.getID() === dataSetID) {\r\n          delete this.currentDataSet;\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Gibt die Projekt ID zurück.\r\n   */\r\n  getID(): number {\r\n    return this.id;\r\n  }\r\n\r\n\r\n  /**\r\n   * Erstellt einen neuen Datensatz und setzt diesen als aktuellen Datensatz.\r\n   * @param dataRowSensors die Sensoren, von denen die Daten ausgelesen werden\r\n   * @param dataSetID die eindeutige Datensatz ID\r\n   * @param dataSetName der Datensatznamen\r\n   * @param generateDate die Erstellungszeit von dem Datensatz\r\n   */\r\n  createDataSet(dataRowSensors: SensorData[], dataSetID: number, dataSetName: string, generateDate?: number): void {\r\n    var dataSet: DataSet = new DataSet(dataRowSensors, dataSetID, dataSetName, generateDate);\r\n    this.dataSet.push(dataSet);\r\n    this.currentDataSet = dataSet;\r\n  }\r\n\r\n  /**\r\n   * Gibt die aktuelle Datensatz ID zurück, falls diese nicht existiert wird -1 zurück gegeben\r\n   */\r\n  getCurrentDataSetID(): number {\r\n    if (this.currentDataSet != null) {\r\n      return this.currentDataSet.getID();\r\n    }\r\n    return -1;\r\n\r\n  }\r\n\r\n  /**\r\n   * Liest von dem aktuellen Datensatz neue Sensordaten von der Datenreihe mit der Datenreihen ID\r\n   * @param dataRowID die Datenreihen ID, von der die Daten ausgelesen werden sollen.\r\n   * @returns die gelesenen Daten von der Datenreihe. Falls die Datenreihe nicht existiert oder kein aktueller Datensatz existiert, sind die Daten leer.\r\n   */\r\n  readDataPoint(dataRowID: number): { dataPoint?: { value: number, relativeTime: number; }; } {\r\n    if (this.currentDataSet != null) {\r\n      return this.currentDataSet.readDataPoint(dataRowID);\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Gibt von allen Datensätzen Informationen zurück\r\n   * @returns dataSetID ist die DatensatzID und dataSetName ist der Datensatzname\r\n   */\r\n  getDataSetMetas(): { dataSetID: number, dataSetName: string; }[] {\r\n    var dataSetMetas: { dataSetID: number, dataSetName: string; }[] = [];\r\n    for (let i = 0; i < this.dataSet.length; i++) {\r\n      dataSetMetas.push({ dataSetID: this.dataSet[i].getID(), dataSetName: this.dataSet[i].getName() });\r\n    }\r\n    return dataSetMetas;\r\n  }\r\n\r\n  /**\r\n   * Gibt die Datenreihen der Datensatz ID zurück und setzt diesen Datensatz als aktuellen Datensatz\r\n   * @param dataSetID die Datensatz ID von der die Datenreihen gelesen werden sollen\r\n   * @returns die Sensordaten von der Datenreihe\r\n   */\r\n  getDataRows(dataSetID: number): { dataRows?: { value: number, relativeTime: number; }[][]; } {\r\n    for (let i = 0; i < this.dataSet.length; i++) {\r\n      if (this.dataSet[i].getID() === dataSetID) {\r\n        this.currentDataSet = this.dataSet[i];\r\n        return { dataRows: this.dataSet[i].getDataRows() };\r\n      }\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Gibt die Datenreihen der aktuellen Datenreihe zurück\r\n   * @returns die Sensordaten von der Datenreihe\r\n   */\r\n  getCurrentDataRows(): { dataRows?: { value: number, relativeTime: number; }[][]; } {\r\n    if (this.currentDataSet != null) {\r\n      return { dataRows: this.currentDataSet.getDataRows() };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Gibt die Session ID zurück\r\n   */\r\n  getSessionID(): number {\r\n    return this.session.getId();\r\n  }\r\n\r\n  /**\r\n   * Setzt dem Label mit der übergebenen ID neue Werte.\r\n   * @param start Ist die neue Startzeit des Labels.\r\n   * @param end Ist die neue Endzeit des Labels.\r\n   * @param labelID Die Label ID, welche überarbeitet werden soll.\r\n   * @param labelName Ist bei Angabe der neue Name des Labels.\r\n   * @returns falls das Label nicht existiert oder es kein aktuellen Datensatz gibt wird false zurück gegeben\r\n   */\r\n  createLabel(labelID: number, span: { start: number, end: number; }, labelName: string): boolean {\r\n    if (this.currentDataSet != null) {\r\n      return this.currentDataSet.setLabel(labelID, span, labelName);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  setLabel(labelID: number, span: { start: number, end: number; }, labelName?: string): boolean {\r\n    if (this.currentDataSet != null) {\r\n      return this.currentDataSet.setLabel(labelID, span, labelName);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  deleteLabel(labelID: number): boolean {\r\n    if (this.currentDataSet != null) {\r\n      return this.currentDataSet.deleteLabel(labelID);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gibt alle Daten von allen Labeln vom aktuellen Datensatz zurück.\r\n   * @returns leer, falls kein aktueller Datensatz existiert\r\n   */\r\n  getLabels(): { labels?: { name: string, id: number, start: number, end: number; }[]; } {\r\n    if (this.currentDataSet != null) {\r\n      return { labels: this.currentDataSet.getLabels() };\r\n    }\r\n    return {};\r\n  }\r\n}","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx",["568","569","570","571","572","573"],"import { IState } from \"../State\";\r\nimport { States } from \"../State\";\r\nimport { QRCode, ErrorCorrectLevel, QRNumber, QRAlphaNum, QR8BitByte, QRKanji } from 'qrcode-generator-ts/js';\r\n\r\nexport class State implements IState {\r\n  currentState: States = States.NeedMessage;\r\n  languageCode: string = \"de\";\r\n  messages: { text: string, id: number; }[] = [];\r\n  projectData?: { projectID: number; projectName: string; AIModelID: number[]; }[];\r\n  currentProject?: { projectID: number, projectName: string, choosenAIModelID: number; };\r\n  // chosenModel?: string;\r\n  adminData?: { name: string, email: string, password: string; };\r\n  //minerData?:\r\n  aiUserData?: { name: string, result: string; };\r\n  labels?: { labelID: number, start: number, end: number; }[];\r\n  sessionID?: string;\r\n  //aiParameter?: \r\n  qr?: string;\r\n}\r\n","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\State.tsx",["574"],"export class State {\r\n  currentState: States = States.NeedMessage;\r\n  languageCode: string = \"de\";\r\n  messageIDs: number[] = [];\r\n  messages: string[] = [];\r\n  emails: { id: string, address: string, chosen: boolean }[] = [{ id: 'ex', address: 'example', chosen: false }];\r\n\r\n}\r\n\r\n\r\nexport enum States {\r\n  NeedMessage,\r\n  NeedData,\r\n  GotData,\r\n  ChangePage,\r\n  Download,\r\n  Send\r\n}\r\n","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\State.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\index.tsx",["575"],"import React, { Component } from 'react'\r\nimport DatasetList from '../../components/ModelCreationComponents/DatasetList'\r\nimport AddDatasetButton from '../../components/ModelCreationComponents/AddDatasetButton'\r\nimport ImputationList from '../../components/ModelCreationComponents/ImputationList'\r\nimport NormalizationList from '../../components/ModelCreationComponents/NormalizationList'\r\nimport FeatureList from '../../components/ModelCreationComponents/FeatureList'\r\nimport ModelTypeList from '../../components/ModelCreationComponents/ModelTypeList'\r\nimport TrainButton from '../../components/ModelCreationComponents/TrainButton'\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport ReactDOM from 'react-dom';\r\nimport './ModelCreationPage.css'\r\n\r\ntype Props = {\r\n};\r\n\r\n\r\nexport class ModelCreationPage extends React.Component<Props, State> implements Page {\r\n\tstate = new State();\r\n\tobservers: PageController[] = [];\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tconst VDOM = (\r\n\t\t\t<div className=\"modelcreationpage\">\r\n\t\t\t\t<div className=\"checklist\">\r\n\t\t\t\t\t<h3>Datasets</h3>\r\n\t\t\t\t\t<DatasetList datasets={this.state.datasets} updateDataset={this.updateDataset} deleteDataset={this.deleteDataset} />\r\n\t\t\t\t\t<AddDatasetButton datasets={this.state.datasets} addDataset={this.addDataset} deleteDataset={this.deleteDataset} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"checklist\"><ImputationList /><NormalizationList /></div>\r\n\t\t\t\t<div className=\"checklist\"><FeatureList /><ModelTypeList /></div>\r\n\t\t\t\t<TrainButton />\r\n\t\t\t</div>\r\n\t\t);\r\n\t\tReactDOM.render(VDOM, document.getElementById('root'));\r\n\t}\r\n\r\n\tattach(observer: PageController) {\r\n\t\tthis.observers.push(observer);\r\n\t}\r\n\r\n\tdetach(observer: PageController) {\r\n\t\tconst index = this.observers.indexOf(observer, 0);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.observers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tnotify() {\r\n\t\tfor (let index = 0; index < this.observers.length; index++) {\r\n\t\t\tconst element = this.observers[index];\r\n\t\t\telement.update();\r\n\t\t}\r\n\t}\r\n\r\n\tgetState() {\r\n\t\treturn this.state;\r\n\t}\r\n\r\n\t//addDataset for add new Dataset\r\n\taddDataset = (datasetObj: { id: string, name: string, chosen: boolean }) => {\r\n\t\t//get orignal datasetList\r\n\t\tconst { datasets } = this.state\r\n\t\t//add new one\r\n\t\tconst newDatasets = [datasetObj, ...datasets]\r\n\t\t//update datasetList\r\n\t\tthis.setState({ datasets: newDatasets })\r\n\t}\r\n\r\n\t//updateDataset for update DatasetList\r\n\tupdateDataset = (id: string, chosen: boolean) => {\r\n\t\t//get orignal DatasetList\r\n\t\tconst { datasets } = this.state\r\n\t\t//compare id\r\n\t\tconst newDatasets = datasets.map((datasetObj) => {\r\n\t\t\tif (datasetObj.id === id) return { ...datasetObj, chosen }\r\n\t\t\telse return datasetObj\r\n\t\t})\r\n\t\tthis.setState({ datasets: newDatasets })\r\n\t}\r\n\r\n\t//deleteDataset for delete datasetObj\r\n\tdeleteDataset = (id: string) => {\r\n\t\t//get orignal datasetList\r\n\t\tconst { datasets } = this.state\r\n\t\t//delete datasetObj with id\r\n\t\tconst newDatasets = datasets.filter((datasetObj) => {\r\n\t\t\treturn datasetObj.id !== id\r\n\t\t})\r\n\t\t//update datasetList\r\n\t\tthis.setState({ datasets: newDatasets })\r\n\t}\r\n\r\n}\r\n","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Session.tsx",["576"],"import { Admin, User } from \"./User\";\r\n\r\n/**\r\n * Diese Klasse Speichert die Session informationen\r\n */\r\nexport class Session {\r\n  private id: number; //Die eindeutige ID der Session\r\n  private connectedUser: User[] = []; //Die User die mit der Projekt der Session interagieren\r\n\r\n  /**\r\n   * Erstellt eine Session\r\n   * @param id Diese ID muss global eindeutig sein\r\n   * @param admin Der Admin, dem diese Session gehört\r\n   */\r\n  constructor(id: number) {\r\n    this.id = id;\r\n  }\r\n\r\n  /**\r\n   * Fügt eine User als Verbundener User zu der Session hinzu\r\n   * @param user Der User, der hinzugefügt wird\r\n   */\r\n  connectUser(user: User): void {\r\n    this.connectedUser.push(user);\r\n  }\r\n\r\n  /**\r\n   * Meldet einen User von der aktuellen Session ab\r\n   * @param user Der User, der abgemeldet werdern soll\r\n   */\r\n  disconnectUser(user: User): boolean {\r\n    for (let i = 0; i < this.connectedUser.length; i++) {\r\n      if (this.connectedUser[i].getID() === user.getID()) {\r\n        delete this.connectedUser[i];\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Gibt von allen verbundenen Usern die ID und den Namen zurück\r\n   */\r\n  getConnectedUsers(): { userID: number, userName: string; }[] {\r\n    var users: { userID: number, userName: string; }[] = [];\r\n    for (let i = 0; i < this.connectedUser.length; i++) {\r\n      users.push({ userID: this.connectedUser[i].getID(), userName: this.connectedUser[i].getName() });\r\n    }\r\n    return users;\r\n  }\r\n\r\n  /**\r\n   * Gibt die Session ID zurück\r\n   */\r\n  getId(): number {\r\n    return this.id;\r\n  }\r\n}","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\AIModel.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Sensor.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\DataSet.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginWindow\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\SendButton\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\DownloadButton\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\TrainButton\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\ImageList\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\ShowImage\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\State.tsx",["577"],"export class State {\r\n  currentState: States = States.NeedMessage;\r\n  languageCode: string = \"de\";\r\n  messageIDs: number[] = [];\r\n  messages: string[] = [];\r\n  datasets: { id: string, name: string, chosen: boolean }[] = [];\r\n  features: { name: string, chosen: boolean }[] = [];\r\n  imputations: { name: string, chosen: boolean }[] = [];\r\n  modeltypes: { name: string, chosen: boolean }[] = [];\r\n  normalizations: { name: string, chosen: boolean }[] = [];\r\n\r\n}\r\n\r\n\r\nexport enum States {\r\n  NeedMessage,\r\n  NeedData,\r\n  GotData,\r\n  ChangePage,\r\n  NeedParameter,\r\n  StartTrain\r\n}\r\n","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\DataRow.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\Label.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\AddEmailButton\\index.jsx",[],["578","579"],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\EmailList\\index.jsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\HandleAllEmail\\index.jsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\ImputationList\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\NormalizationList\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\FeatureList\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\ModelTypeList\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\DataPoint.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\model\\TimeSpan.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\AddDatasetButton\\index.jsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\DatasetList\\index.jsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx",["580","581","582","583","584"],"import React, { Component } from 'react'\r\nimport ChangeToVisuBtn from '../ChangeToVisuBtn';\r\nimport ModelList from '../ModelList';\r\nimport QRImage from '../QRImage';\r\n\r\nexport default class ProjectList extends Component {\r\n    state = {\r\n        value: null,\r\n        click: false,\r\n        loadclick: false,\r\n        //hier Beispiel, in componentDidMount will projectData verändern\r\n        projectData: [{\r\n            projectID: 1,\r\n            projectName: 'Projekt1',\r\n            AIModelID: [1, 2]\r\n        }, {\r\n            projectID: 2,\r\n            projectName: 'Projekt2',\r\n            AIModelID: []\r\n        }]\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** controller noch nicht gegeben*/\r\n        PubSub.subscribe('getprojectlist', (_msg: any, data: { projectID: number, projectName: string, AIModelID: number[]; }[]) => {\r\n            this.setState({ projectData: data })\r\n        })\r\n\r\n    }\r\n\r\n    handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n    handleChoose() {\r\n        /* wait to change load model*/\r\n        if (this.state.value == null) {\r\n            alert('Sie haben noch kein Projekt gewählt!')\r\n        } else {\r\n            this.state.projectData.map((projectObj) => {\r\n                if (this.state.value == projectObj.projectID) {\r\n                    if (projectObj.AIModelID.length != 0) {\r\n                        PubSub.publish('needmodellist', projectObj)\r\n                        this.setState({ click: true })\r\n                    } else {\r\n                        this.setState({ click: false })\r\n                        alert('Es gibt keine Model in diesem Projekt!')\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n    handleLoad() {\r\n\r\n        if (this.state.value == null) {\r\n            alert('Sie haben noch kein Projekt gewählt!')\r\n        } else {\r\n            this.state.projectData.map((projectObj) => {\r\n                if (this.state.value == projectObj.projectID) {\r\n                    PubSub.publish('loadproject', projectObj)\r\n                    this.setState({ loadclick: true })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <section>\r\n                <label>ProjektList</label>\r\n                <select onChange={this.handleChange}>\r\n                    <option>Projekt Wählen</option>\r\n                    {this.state.projectData.map((projectObj) => {\r\n                        return <option value={projectObj.projectID}>{projectObj.projectName}</option>\r\n                    })}\r\n                </select>\r\n                <button onClick={() => this.handleChoose()} className=\"btn\" >Wählen Modell in diesem Projekt </button>\r\n                <button onClick={() => this.handleLoad()} className=\"btn\" >Laden das Projekt!</button>\r\n                {this.state.loadclick ? <div> <QRImage /><ChangeToVisuBtn /></div> : null}\r\n                {this.state.click ? <div> <ModelList /></div> : null}\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ChangeToVisuBtn\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\EmailItem\\index.jsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\DatasetItem\\index.jsx",[],"C:\\Users\\timi300399\\Documents\\GitHub\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx",[],{"ruleId":"585","severity":1,"message":"586","line":1,"column":8,"nodeType":"587","messageId":"588","endLine":1,"endColumn":13},{"ruleId":"585","severity":1,"message":"589","line":2,"column":8,"nodeType":"587","messageId":"588","endLine":2,"endColumn":16},{"ruleId":"585","severity":1,"message":"590","line":4,"column":10,"nodeType":"587","messageId":"588","endLine":4,"endColumn":16},{"ruleId":"585","severity":1,"message":"591","line":6,"column":10,"nodeType":"587","messageId":"588","endLine":6,"endColumn":25},{"ruleId":"585","severity":1,"message":"592","line":7,"column":10,"nodeType":"587","messageId":"588","endLine":7,"endColumn":27},{"ruleId":"585","severity":1,"message":"593","line":9,"column":37,"nodeType":"587","messageId":"588","endLine":9,"endColumn":45},{"ruleId":"585","severity":1,"message":"594","line":9,"column":47,"nodeType":"587","messageId":"588","endLine":9,"endColumn":57},{"ruleId":"585","severity":1,"message":"595","line":9,"column":59,"nodeType":"587","messageId":"588","endLine":9,"endColumn":69},{"ruleId":"585","severity":1,"message":"596","line":9,"column":71,"nodeType":"587","messageId":"588","endLine":9,"endColumn":78},{"ruleId":"585","severity":1,"message":"597","line":10,"column":10,"nodeType":"587","messageId":"588","endLine":10,"endColumn":19},{"ruleId":"598","severity":1,"message":"599","line":48,"column":13,"nodeType":"600","messageId":"601","endLine":50,"endColumn":23},{"ruleId":"598","severity":1,"message":"599","line":60,"column":13,"nodeType":"600","messageId":"601","endLine":62,"endColumn":23},{"ruleId":"585","severity":1,"message":"602","line":309,"column":11,"nodeType":"587","messageId":"588","endLine":309,"endColumn":19},{"ruleId":"585","severity":1,"message":"603","line":49,"column":13,"nodeType":"587","messageId":"588","endLine":49,"endColumn":25},{"ruleId":"585","severity":1,"message":"604","line":51,"column":19,"nodeType":"587","messageId":"588","endLine":51,"endColumn":34},{"ruleId":"585","severity":1,"message":"605","line":7,"column":10,"nodeType":"587","messageId":"588","endLine":7,"endColumn":15},{"ruleId":"585","severity":1,"message":"606","line":1,"column":17,"nodeType":"587","messageId":"588","endLine":1,"endColumn":26},{"ruleId":"607","severity":1,"message":"608","line":66,"column":13,"nodeType":"609","endLine":66,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":67,"column":13,"nodeType":"609","endLine":67,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":89,"column":13,"nodeType":"609","endLine":89,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":90,"column":13,"nodeType":"609","endLine":90,"endColumn":23},{"ruleId":"610","severity":1,"message":"611","line":95,"column":41,"nodeType":"612","messageId":"601","endLine":95,"endColumn":43},{"ruleId":"607","severity":1,"message":"608","line":108,"column":13,"nodeType":"609","endLine":108,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":109,"column":13,"nodeType":"609","endLine":109,"endColumn":23},{"ruleId":"610","severity":1,"message":"611","line":114,"column":41,"nodeType":"612","messageId":"601","endLine":114,"endColumn":43},{"ruleId":"607","severity":1,"message":"608","line":127,"column":13,"nodeType":"609","endLine":127,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":128,"column":13,"nodeType":"609","endLine":128,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":138,"column":13,"nodeType":"609","endLine":138,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":139,"column":13,"nodeType":"609","endLine":139,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":146,"column":13,"nodeType":"609","endLine":146,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":153,"column":13,"nodeType":"609","endLine":153,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":154,"column":13,"nodeType":"609","endLine":154,"endColumn":23},{"ruleId":"585","severity":1,"message":"606","line":1,"column":17,"nodeType":"587","messageId":"588","endLine":1,"endColumn":26},{"ruleId":"607","severity":1,"message":"608","line":64,"column":3,"nodeType":"609","endLine":64,"endColumn":13},{"ruleId":"607","severity":1,"message":"608","line":75,"column":3,"nodeType":"609","endLine":75,"endColumn":13},{"ruleId":"607","severity":1,"message":"608","line":86,"column":3,"nodeType":"609","endLine":86,"endColumn":13},{"ruleId":"607","severity":1,"message":"608","line":97,"column":3,"nodeType":"609","endLine":97,"endColumn":13},{"ruleId":"585","severity":1,"message":"613","line":103,"column":11,"nodeType":"587","messageId":"588","endLine":103,"endColumn":17},{"ruleId":"607","severity":1,"message":"608","line":109,"column":3,"nodeType":"609","endLine":109,"endColumn":13},{"ruleId":"585","severity":1,"message":"606","line":1,"column":17,"nodeType":"587","messageId":"588","endLine":1,"endColumn":26},{"ruleId":"585","severity":1,"message":"614","line":5,"column":8,"nodeType":"587","messageId":"588","endLine":5,"endColumn":16},{"ruleId":"585","severity":1,"message":"615","line":10,"column":10,"nodeType":"587","messageId":"588","endLine":10,"endColumn":24},{"ruleId":"607","severity":1,"message":"608","line":59,"column":9,"nodeType":"609","endLine":59,"endColumn":19},{"ruleId":"607","severity":1,"message":"608","line":66,"column":13,"nodeType":"609","endLine":66,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":67,"column":13,"nodeType":"609","endLine":67,"endColumn":23},{"ruleId":"585","severity":1,"message":"616","line":5,"column":10,"nodeType":"587","messageId":"588","endLine":5,"endColumn":15},{"ruleId":"585","severity":1,"message":"617","line":3,"column":10,"nodeType":"587","messageId":"588","endLine":3,"endColumn":16},{"ruleId":"585","severity":1,"message":"618","line":3,"column":18,"nodeType":"587","messageId":"588","endLine":3,"endColumn":35},{"ruleId":"585","severity":1,"message":"593","line":3,"column":37,"nodeType":"587","messageId":"588","endLine":3,"endColumn":45},{"ruleId":"585","severity":1,"message":"594","line":3,"column":47,"nodeType":"587","messageId":"588","endLine":3,"endColumn":57},{"ruleId":"585","severity":1,"message":"595","line":3,"column":59,"nodeType":"587","messageId":"588","endLine":3,"endColumn":69},{"ruleId":"585","severity":1,"message":"596","line":3,"column":71,"nodeType":"587","messageId":"588","endLine":3,"endColumn":78},{"ruleId":"619","severity":1,"message":"620","line":2,"column":26,"nodeType":"587","messageId":"621","endLine":2,"endColumn":32},{"ruleId":"585","severity":1,"message":"616","line":1,"column":10,"nodeType":"587","messageId":"588","endLine":1,"endColumn":15},{"ruleId":"585","severity":1,"message":"606","line":1,"column":17,"nodeType":"587","messageId":"588","endLine":1,"endColumn":26},{"ruleId":"619","severity":1,"message":"620","line":2,"column":26,"nodeType":"587","messageId":"621","endLine":2,"endColumn":32},{"ruleId":"622","severity":1,"message":"623","line":41,"column":53,"nodeType":"624","messageId":"625","endLine":41,"endColumn":55},{"ruleId":"610","severity":1,"message":"626","line":42,"column":38,"nodeType":"612","messageId":"601","endLine":42,"endColumn":40},{"ruleId":"610","severity":1,"message":"611","line":43,"column":53,"nodeType":"612","messageId":"601","endLine":43,"endColumn":55},{"ruleId":"622","severity":1,"message":"623","line":60,"column":53,"nodeType":"624","messageId":"625","endLine":60,"endColumn":55},{"ruleId":"610","severity":1,"message":"626","line":61,"column":38,"nodeType":"612","messageId":"601","endLine":61,"endColumn":40},{"ruleId":"585","severity":1,"message":"586","line":1,"column":8,"nodeType":"587","messageId":"588","endLine":1,"endColumn":13},{"ruleId":"585","severity":1,"message":"589","line":2,"column":8,"nodeType":"587","messageId":"588","endLine":2,"endColumn":16},{"ruleId":"627","replacedBy":"628"},{"ruleId":"629","replacedBy":"630"},{"ruleId":"585","severity":1,"message":"590","line":4,"column":10,"nodeType":"587","messageId":"588","endLine":4,"endColumn":16},{"ruleId":"585","severity":1,"message":"591","line":6,"column":10,"nodeType":"587","messageId":"588","endLine":6,"endColumn":25},{"ruleId":"585","severity":1,"message":"592","line":7,"column":10,"nodeType":"587","messageId":"588","endLine":7,"endColumn":27},{"ruleId":"585","severity":1,"message":"593","line":9,"column":37,"nodeType":"587","messageId":"588","endLine":9,"endColumn":45},{"ruleId":"585","severity":1,"message":"594","line":9,"column":47,"nodeType":"587","messageId":"588","endLine":9,"endColumn":57},{"ruleId":"585","severity":1,"message":"595","line":9,"column":59,"nodeType":"587","messageId":"588","endLine":9,"endColumn":69},{"ruleId":"585","severity":1,"message":"596","line":9,"column":71,"nodeType":"587","messageId":"588","endLine":9,"endColumn":78},{"ruleId":"585","severity":1,"message":"597","line":10,"column":10,"nodeType":"587","messageId":"588","endLine":10,"endColumn":19},{"ruleId":"598","severity":1,"message":"599","line":48,"column":13,"nodeType":"600","messageId":"601","endLine":50,"endColumn":23},{"ruleId":"598","severity":1,"message":"599","line":60,"column":13,"nodeType":"600","messageId":"601","endLine":62,"endColumn":23},{"ruleId":"585","severity":1,"message":"603","line":49,"column":13,"nodeType":"587","messageId":"588","endLine":49,"endColumn":25},{"ruleId":"585","severity":1,"message":"604","line":51,"column":19,"nodeType":"587","messageId":"588","endLine":51,"endColumn":34},{"ruleId":"585","severity":1,"message":"605","line":7,"column":10,"nodeType":"587","messageId":"588","endLine":7,"endColumn":15},{"ruleId":"585","severity":1,"message":"606","line":1,"column":17,"nodeType":"587","messageId":"588","endLine":1,"endColumn":26},{"ruleId":"607","severity":1,"message":"608","line":66,"column":13,"nodeType":"609","endLine":66,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":67,"column":13,"nodeType":"609","endLine":67,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":89,"column":13,"nodeType":"609","endLine":89,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":90,"column":13,"nodeType":"609","endLine":90,"endColumn":23},{"ruleId":"610","severity":1,"message":"611","line":95,"column":41,"nodeType":"612","messageId":"601","endLine":95,"endColumn":43},{"ruleId":"607","severity":1,"message":"608","line":108,"column":13,"nodeType":"609","endLine":108,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":109,"column":13,"nodeType":"609","endLine":109,"endColumn":23},{"ruleId":"610","severity":1,"message":"611","line":114,"column":41,"nodeType":"612","messageId":"601","endLine":114,"endColumn":43},{"ruleId":"607","severity":1,"message":"608","line":127,"column":13,"nodeType":"609","endLine":127,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":128,"column":13,"nodeType":"609","endLine":128,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":138,"column":13,"nodeType":"609","endLine":138,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":139,"column":13,"nodeType":"609","endLine":139,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":146,"column":13,"nodeType":"609","endLine":146,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":153,"column":13,"nodeType":"609","endLine":153,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":154,"column":13,"nodeType":"609","endLine":154,"endColumn":23},{"ruleId":"585","severity":1,"message":"606","line":1,"column":17,"nodeType":"587","messageId":"588","endLine":1,"endColumn":26},{"ruleId":"607","severity":1,"message":"608","line":64,"column":3,"nodeType":"609","endLine":64,"endColumn":13},{"ruleId":"607","severity":1,"message":"608","line":75,"column":3,"nodeType":"609","endLine":75,"endColumn":13},{"ruleId":"607","severity":1,"message":"608","line":86,"column":3,"nodeType":"609","endLine":86,"endColumn":13},{"ruleId":"607","severity":1,"message":"608","line":97,"column":3,"nodeType":"609","endLine":97,"endColumn":13},{"ruleId":"585","severity":1,"message":"613","line":103,"column":11,"nodeType":"587","messageId":"588","endLine":103,"endColumn":17},{"ruleId":"607","severity":1,"message":"608","line":109,"column":3,"nodeType":"609","endLine":109,"endColumn":13},{"ruleId":"585","severity":1,"message":"606","line":1,"column":17,"nodeType":"587","messageId":"588","endLine":1,"endColumn":26},{"ruleId":"585","severity":1,"message":"614","line":5,"column":8,"nodeType":"587","messageId":"588","endLine":5,"endColumn":16},{"ruleId":"585","severity":1,"message":"615","line":10,"column":10,"nodeType":"587","messageId":"588","endLine":10,"endColumn":24},{"ruleId":"607","severity":1,"message":"608","line":59,"column":9,"nodeType":"609","endLine":59,"endColumn":19},{"ruleId":"607","severity":1,"message":"608","line":66,"column":13,"nodeType":"609","endLine":66,"endColumn":23},{"ruleId":"607","severity":1,"message":"608","line":67,"column":13,"nodeType":"609","endLine":67,"endColumn":23},{"ruleId":"585","severity":1,"message":"616","line":5,"column":10,"nodeType":"587","messageId":"588","endLine":5,"endColumn":15},{"ruleId":"585","severity":1,"message":"617","line":3,"column":10,"nodeType":"587","messageId":"588","endLine":3,"endColumn":16},{"ruleId":"585","severity":1,"message":"618","line":3,"column":18,"nodeType":"587","messageId":"588","endLine":3,"endColumn":35},{"ruleId":"585","severity":1,"message":"593","line":3,"column":37,"nodeType":"587","messageId":"588","endLine":3,"endColumn":45},{"ruleId":"585","severity":1,"message":"594","line":3,"column":47,"nodeType":"587","messageId":"588","endLine":3,"endColumn":57},{"ruleId":"585","severity":1,"message":"595","line":3,"column":59,"nodeType":"587","messageId":"588","endLine":3,"endColumn":69},{"ruleId":"585","severity":1,"message":"596","line":3,"column":71,"nodeType":"587","messageId":"588","endLine":3,"endColumn":78},{"ruleId":"619","severity":1,"message":"620","line":2,"column":26,"nodeType":"587","messageId":"621","endLine":2,"endColumn":32},{"ruleId":"585","severity":1,"message":"606","line":1,"column":17,"nodeType":"587","messageId":"588","endLine":1,"endColumn":26},{"ruleId":"585","severity":1,"message":"616","line":1,"column":10,"nodeType":"587","messageId":"588","endLine":1,"endColumn":15},{"ruleId":"619","severity":1,"message":"620","line":2,"column":26,"nodeType":"587","messageId":"621","endLine":2,"endColumn":32},{"ruleId":"627","replacedBy":"628"},{"ruleId":"629","replacedBy":"630"},{"ruleId":"622","severity":1,"message":"623","line":41,"column":53,"nodeType":"624","messageId":"625","endLine":41,"endColumn":55},{"ruleId":"610","severity":1,"message":"626","line":42,"column":38,"nodeType":"612","messageId":"601","endLine":42,"endColumn":40},{"ruleId":"610","severity":1,"message":"611","line":43,"column":53,"nodeType":"612","messageId":"601","endLine":43,"endColumn":55},{"ruleId":"622","severity":1,"message":"623","line":60,"column":53,"nodeType":"624","messageId":"625","endLine":60,"endColumn":55},{"ruleId":"610","severity":1,"message":"626","line":61,"column":38,"nodeType":"612","messageId":"601","endLine":61,"endColumn":40},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'IState' is defined but never used.","'StartController' is defined but never used.","'VisualizationPage' is defined but never used.","'QRNumber' is defined but never used.","'QRAlphaNum' is defined but never used.","'QR8BitByte' is defined but never used.","'QRKanji' is defined but never used.","'StartPage' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'response' is assigned a value but never used.","'text' is assigned a value but never used.","'element' is assigned a value but never used.","'State' is defined but never used.","'Component' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'emails' is assigned a value but never used.","'eximage1' is defined but never used.","'MainController' is defined but never used.","'Admin' is defined but never used.","'QRCode' is defined but never used.","'ErrorCorrectLevel' is defined but never used.","@typescript-eslint/no-use-before-define","'States' was used before it was defined.","noUseBeforeDefine","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","no-native-reassign",["631"],"no-negated-in-lhs",["632"],"no-global-assign","no-unsafe-negation"]