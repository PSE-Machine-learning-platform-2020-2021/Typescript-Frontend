[{"D:\\main1\\Typescript-Frontend\\ki-app\\src\\index.tsx":"1","D:\\main1\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts":"2","D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx":"3","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx":"4","D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx":"5","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\State.tsx":"6","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\ExplorerConnector.tsx":"7","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Language.tsx":"8","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\User.tsx":"9","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx":"10","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Device.tsx":"11","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Project.tsx":"12","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx":"13","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\AIModel.tsx":"14","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Session.tsx":"15","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Sensor.tsx":"16","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DataSet.tsx":"17","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx":"18","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx":"19","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx":"20","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginWindow\\index.tsx":"21","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Label.tsx":"22","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx":"23","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx":"24","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DataRow.tsx":"25","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\TimeSpan.tsx":"26","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx":"27","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DataPoint.tsx":"28","D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx":"29"},{"size":480,"mtime":1613136673047,"results":"30","hashOfConfig":"31"},{"size":440,"mtime":1613136674313,"results":"32","hashOfConfig":"31"},{"size":3063,"mtime":1613139545008,"results":"33","hashOfConfig":"31"},{"size":12866,"mtime":1613315191382,"results":"34","hashOfConfig":"31"},{"size":5059,"mtime":1613316148864,"results":"35","hashOfConfig":"31"},{"size":3138,"mtime":1613315346748,"results":"36","hashOfConfig":"31"},{"size":5262,"mtime":1613315191339,"results":"37","hashOfConfig":"31"},{"size":1673,"mtime":1613315191438,"results":"38","hashOfConfig":"31"},{"size":14034,"mtime":1613315191683,"results":"39","hashOfConfig":"31"},{"size":5236,"mtime":1613315346776,"results":"40","hashOfConfig":"31"},{"size":1767,"mtime":1613315191241,"results":"41","hashOfConfig":"31"},{"size":7572,"mtime":1613315191505,"results":"42","hashOfConfig":"31"},{"size":1108,"mtime":1613314541015,"results":"43","hashOfConfig":"31"},{"size":485,"mtime":1613141165378,"results":"44","hashOfConfig":"31"},{"size":1693,"mtime":1613315191616,"results":"45","hashOfConfig":"31"},{"size":5849,"mtime":1613315191572,"results":"46","hashOfConfig":"31"},{"size":6394,"mtime":1613315191139,"results":"47","hashOfConfig":"31"},{"size":229,"mtime":1613136676421,"results":"48","hashOfConfig":"31"},{"size":594,"mtime":1613316134985,"results":"49","hashOfConfig":"31"},{"size":520,"mtime":1613315021031,"results":"50","hashOfConfig":"31"},{"size":2721,"mtime":1613315021009,"results":"51","hashOfConfig":"31"},{"size":1787,"mtime":1613141165915,"results":"52","hashOfConfig":"31"},{"size":453,"mtime":1613316132807,"results":"53","hashOfConfig":"31"},{"size":647,"mtime":1613269438124,"results":"54","hashOfConfig":"31"},{"size":3361,"mtime":1613315191061,"results":"55","hashOfConfig":"31"},{"size":1370,"mtime":1613141166127,"results":"56","hashOfConfig":"31"},{"size":2296,"mtime":1613315021031,"results":"57","hashOfConfig":"31"},{"size":927,"mtime":1613141165498,"results":"58","hashOfConfig":"31"},{"size":1130,"mtime":1613315021031,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"yiqgwz",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"81"},"D:\\main1\\Typescript-Frontend\\ki-app\\src\\index.tsx",["123","124"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx",["125"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx",["126"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx",["127","128","129","130","131"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\State.tsx",["132","133","134","135","136","137"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\ExplorerConnector.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Language.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\User.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx",["138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React, { Component } from 'react';\r\nimport PubSub from 'pubsub-js';\r\nimport ConstantsText from '../../components/ReferringComponents/ConstantsText';\r\nimport NewProjectButton from '../../components/ReferringComponents/NewProjectButton';\r\nimport LoadModelButton from '../../components/ReferringComponents/LoadModelButton';\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport ReactDOM from 'react-dom';\r\nimport { States } from '../State';\r\nimport LoginWindow from '../../components/ReferringComponents/LoginWindow';\r\n\r\ntype Props = {\r\n\r\n};\r\n\r\nexport class ReferringPage extends React.Component<Props, State> implements Page {\r\n\r\n    state = new State();\r\n    observers: PageController[] = [];\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.needqr()\r\n        this.register()\r\n        this.login()\r\n        this.needprojectlist()\r\n        this.loadproject()\r\n        this.loadmodel()\r\n        //  this.loadproject\r\n        const VDOM = (\r\n            <div>\r\n                <ConstantsText />\r\n                <NewProjectButton />\r\n                <LoginWindow />\r\n                <LoadModelButton />\r\n            </div>\r\n        );\r\n        ReactDOM.render(VDOM, document.getElementById('root'));\r\n    }\r\n\r\n    attach(observer: PageController) {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    detach(observer: PageController) {\r\n        const index = this.observers.indexOf(observer, 0);\r\n        if (index > -1) {\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notify() {\r\n        for (let index = 0; index < this.observers.length; index++) {\r\n            const element = this.observers[index];\r\n            element.update();\r\n        }\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n    needqr() {\r\n        PubSub.subscribe('needqr', (_msg: any) => {\r\n            // console.log(this.state.currentState)\r\n            this.state.currentState = States.NeedQRC;\r\n            //console.log(this.state.currentState)\r\n            this.notify();\r\n            //console.log(this.state.currentState)\r\n            //console.log(this.state.qr)\r\n            PubSub.publish('getqr', this.state.qr)\r\n        })\r\n    }\r\n\r\n    register() {\r\n        PubSub.subscribe('register', (_msg: any, data: { name: string, email: string, password: string; }) => {\r\n            // console.log(this.state.currentState)\r\n            this.state.adminData = data\r\n            this.state.currentState = States.Register\r\n            //console.log(this.state.currentState)\r\n            this.notify()\r\n            //console.log(this.state.currentState)\r\n            let flag: boolean\r\n            if (this.state.currentState != States.Register) {\r\n                flag = false\r\n            } else {\r\n                flag = true\r\n            }\r\n            PubSub.publish('registerstatus', flag)\r\n        })\r\n\r\n    }\r\n\r\n    login() {\r\n        PubSub.subscribe('login', (_msg: any, data: { name: string, email: string, password: string; }) => {\r\n            // console.log(this.state.currentState)\r\n            this.state.adminData = data\r\n            this.state.currentState = States.Login\r\n            //console.log(this.state.currentState)\r\n            this.notify()\r\n            //console.log(this.state.currentState)\r\n            let flag: boolean\r\n            if (this.state.currentState != States.Login) {\r\n                flag = false\r\n            } else {\r\n                flag = true\r\n            }\r\n            PubSub.publish('loginstatus', flag)\r\n        })\r\n\r\n    }\r\n\r\n    needprojectlist() {\r\n        PubSub.subscribe('needproject', (_msg: any) => {\r\n            // console.log(this.state.currentState)\r\n            this.state.currentState = States.NeedProject\r\n            //console.log(this.state.currentState)\r\n            this.notify()\r\n            //console.log(this.state.currentState)\r\n            PubSub.publish('getprojectlist', this.state.projectData)\r\n        })\r\n    }\r\n\r\n    loadproject() {\r\n        PubSub.subscribe('loadproject', (_msg: any, data: { projectID: number, projectName: string, AIModelExist: boolean; }) => {\r\n            // console.log(this.state.currentState)\r\n            this.state.currentState = States.LoadProject\r\n            this.state.currentProject = { projectID: data.projectID, projectName: data.projectName, AIModels: [] }\r\n            //console.log(this.state.currentState)\r\n            this.notify()\r\n            //console.log(this.state.currentState)\r\n            PubSub.publish('getmodelist', this.state.currentProject)\r\n\r\n        })\r\n    }\r\n    loadmodel() {\r\n        PubSub.subscribe('loadmodel', (_msg: any, data: { projectID: number, projectName: string, AIModelExist: boolean; }) => {\r\n            // console.log(this.state.currentState)\r\n            this.state.currentState = States.LoadProject\r\n            this.state.currentProject = { projectID: data.projectID, projectName: data.projectName, AIModels: [] }\r\n            //console.log(this.state.currentState)\r\n            this.notify()\r\n            //console.log(this.state.currentState)\r\n            //PubSub.publish('getchosen', this.state.chosenModel)\r\n        })\r\n    }\r\n}\r\n",["151","152"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Device.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Project.tsx",["153"],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx",["154","155","156","157","158","159"],"import { IState } from \"../State\";\r\nimport { States } from \"../State\";\r\nimport { QRCode, ErrorCorrectLevel, QRNumber, QRAlphaNum, QR8BitByte, QRKanji } from 'qrcode-generator-ts/js';\r\n\r\nexport class State implements IState {\r\n  currentState: States = States.NeedMessage;\r\n  languageCode: string = \"de\";\r\n  messages: { text: string, id: number; }[] = [];\r\n  projectData?: { projectID: number, projectName: string, AIModelExist: boolean; }[];\r\n  currentProject?: { projectID: number, projectName: string, AIModels: string[]; };\r\n  chosenModel?: string;\r\n  adminData?: { name: string, email: string, password: string; };\r\n  //minerData?:\r\n  aiUserData?: { name: string, result: string; };\r\n  labels?: { labelID: number, start: number, end: number; }[];\r\n  sessionID?: string;\r\n  //aiParameter?: \r\n  dataPoints?: { dataRowID: number, value: number; }[];\r\n  dataRows?: { dataSetID: number, data: number[][][]; };\r\n  dataSets?: { sensorTypes: string[], dataSetName: string; }[];\r\n  qr?: string;\r\n  recordingSettings?: { newDataSetName: string, usedSensorTypes: string[], readTime: number, waitTime: number; };\r\n}\r\n","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\AIModel.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Session.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Sensor.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DataSet.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginWindow\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\Label.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DataRow.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\TimeSpan.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx",["160","161"],"import React, { Component } from 'react'\r\nimport ModelList from '../ModelList';\r\n\r\nexport default class ProjectList extends Component {\r\n    state = {\r\n        value: null,\r\n        click: false,\r\n        //hier Beispiel in componentDidMount will projectData \r\n        projectData: [{\r\n            projectID: 1,\r\n            projectName: 'project1',\r\n            AIModelExist: true\r\n        }, {\r\n            projectID: 2,\r\n            projectName: 'project2',\r\n            AIModelExist: false\r\n\r\n        }]\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** controller noch nicht gegeben\r\n        PubSub.subscribe('getprojectlist', (_msg: any, data: { projectID: number, projectName: string, AIModelExist: boolean; }[]) => {\r\n            this.setState({ projectData: data })\r\n        })\r\n         */\r\n    }\r\n\r\n    handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n    handleChoose() {\r\n        /* wait to change load model*/\r\n        if (this.state.value == null) {\r\n            alert('no choice')\r\n        } else {\r\n            this.state.projectData.map((projectObj) => {\r\n                if (this.state.value == projectObj.projectID) {\r\n                    if (projectObj.AIModelExist) {\r\n                        PubSub.publish('loadproject', projectObj)\r\n                        this.setState({ click: true })\r\n                    } else {\r\n                        this.setState({ click: false })\r\n                        alert('Es gibt keine Model in diesem Projekt!')\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <section>\r\n                <label>ProjectList</label>\r\n                <select onChange={this.handleChange}>\r\n                    <option>choose project</option>\r\n                    {this.state.projectData.map((projectObj) => {\r\n                        return <option value={projectObj.projectID}>{projectObj.projectName}</option>\r\n                    })}\r\n                </select>\r\n                <button onClick={() => this.handleChoose()} className=\"btn\" >Projekt Wählen</button>\r\n                {this.state.click ? <div> <ModelList /></div> : null}\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n","D:\\main1\\Typescript-Frontend\\ki-app\\src\\model\\DataPoint.tsx",[],"D:\\main1\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx",["162"],"import React, { Component } from 'react'\r\n\r\nexport default class ModelList extends Component {\r\n    state = {\r\n        value: ''\r\n\r\n    }\r\n    handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n    handleChoose() {\r\n        /* wait to change load model*/\r\n        if (this.state.value == '') {\r\n            alert('no choice')\r\n        } else {\r\n            alert('load' + this.state.value);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <section>\r\n                <label>ModelList</label>\r\n                <select onChange={this.handleChange}>\r\n                    <option value=\"\">choose model</option>\r\n                    <option value=\"model1\">model1</option>\r\n                    <option value=\"model2\">model2</option>\r\n                    <option value=\"model3\">model3</option>\r\n                    <option value=\"model4\">model4</option>\r\n                </select>\r\n\r\n                <button onClick={() => this.handleChoose()} className=\"btn\" >Model Wählen</button>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"163","severity":1,"message":"164","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"167","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"168","line":5,"column":10,"nodeType":"165","messageId":"166","endLine":5,"endColumn":16},{"ruleId":"163","severity":1,"message":"169","line":5,"column":10,"nodeType":"165","messageId":"166","endLine":5,"endColumn":17},{"ruleId":"163","severity":1,"message":"170","line":6,"column":10,"nodeType":"165","messageId":"166","endLine":6,"endColumn":22},{"ruleId":"163","severity":1,"message":"171","line":8,"column":37,"nodeType":"165","messageId":"166","endLine":8,"endColumn":45},{"ruleId":"163","severity":1,"message":"172","line":8,"column":47,"nodeType":"165","messageId":"166","endLine":8,"endColumn":57},{"ruleId":"163","severity":1,"message":"173","line":8,"column":59,"nodeType":"165","messageId":"166","endLine":8,"endColumn":69},{"ruleId":"163","severity":1,"message":"174","line":8,"column":71,"nodeType":"165","messageId":"166","endLine":8,"endColumn":78},{"ruleId":"163","severity":1,"message":"175","line":1,"column":10,"nodeType":"165","messageId":"166","endLine":1,"endColumn":16},{"ruleId":"163","severity":1,"message":"176","line":1,"column":18,"nodeType":"165","messageId":"166","endLine":1,"endColumn":35},{"ruleId":"163","severity":1,"message":"171","line":1,"column":37,"nodeType":"165","messageId":"166","endLine":1,"endColumn":45},{"ruleId":"163","severity":1,"message":"172","line":1,"column":47,"nodeType":"165","messageId":"166","endLine":1,"endColumn":57},{"ruleId":"163","severity":1,"message":"173","line":1,"column":59,"nodeType":"165","messageId":"166","endLine":1,"endColumn":69},{"ruleId":"163","severity":1,"message":"174","line":1,"column":71,"nodeType":"165","messageId":"166","endLine":1,"endColumn":78},{"ruleId":"163","severity":1,"message":"177","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"179","line":66,"column":13,"nodeType":"180","endLine":66,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":78,"column":13,"nodeType":"180","endLine":78,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":79,"column":13,"nodeType":"180","endLine":79,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":84,"column":41,"nodeType":"183","messageId":"184","endLine":84,"endColumn":43},{"ruleId":"178","severity":1,"message":"179","line":97,"column":13,"nodeType":"180","endLine":97,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":98,"column":13,"nodeType":"180","endLine":98,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":103,"column":41,"nodeType":"183","messageId":"184","endLine":103,"endColumn":43},{"ruleId":"178","severity":1,"message":"179","line":116,"column":13,"nodeType":"180","endLine":116,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":127,"column":13,"nodeType":"180","endLine":127,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":128,"column":13,"nodeType":"180","endLine":128,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":139,"column":13,"nodeType":"180","endLine":139,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":140,"column":13,"nodeType":"180","endLine":140,"endColumn":23},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"163","severity":1,"message":"189","line":5,"column":10,"nodeType":"165","messageId":"166","endLine":5,"endColumn":15},{"ruleId":"163","severity":1,"message":"175","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":16},{"ruleId":"163","severity":1,"message":"176","line":3,"column":18,"nodeType":"165","messageId":"166","endLine":3,"endColumn":35},{"ruleId":"163","severity":1,"message":"171","line":3,"column":37,"nodeType":"165","messageId":"166","endLine":3,"endColumn":45},{"ruleId":"163","severity":1,"message":"172","line":3,"column":47,"nodeType":"165","messageId":"166","endLine":3,"endColumn":57},{"ruleId":"163","severity":1,"message":"173","line":3,"column":59,"nodeType":"165","messageId":"166","endLine":3,"endColumn":69},{"ruleId":"163","severity":1,"message":"174","line":3,"column":71,"nodeType":"165","messageId":"166","endLine":3,"endColumn":78},{"ruleId":"190","severity":1,"message":"191","line":39,"column":53,"nodeType":"192","messageId":"193","endLine":39,"endColumn":55},{"ruleId":"181","severity":1,"message":"194","line":40,"column":38,"nodeType":"183","messageId":"184","endLine":40,"endColumn":40},{"ruleId":"181","severity":1,"message":"194","line":15,"column":30,"nodeType":"183","messageId":"184","endLine":15,"endColumn":32},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'IState' is defined but never used.","'Session' is defined but never used.","'AIController' is defined but never used.","'QRNumber' is defined but never used.","'QRAlphaNum' is defined but never used.","'QR8BitByte' is defined but never used.","'QRKanji' is defined but never used.","'QRCode' is defined but never used.","'ErrorCorrectLevel' is defined but never used.","'Component' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["195"],"no-negated-in-lhs",["196"],"'Admin' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]