[{"D:\\main2\\Typescript-Frontend\\ki-app\\src\\index.tsx":"1","D:\\main2\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts":"2","D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx":"3","D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx":"4","D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\StartController.tsx":"5","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx":"6","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\State.tsx":"7","D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\DeliveryController.tsx":"8","D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\DataCollectionController.tsx":"9","D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\VisualizationController.tsx":"10","D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\SensorManager.tsx":"11","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\StartPage\\index.tsx":"12","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\Language.tsx":"13","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\AIBuilder.tsx":"14","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\User.tsx":"15","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\DatabaseConnector.tsx":"16","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\AIDistributor.tsx":"17","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\FinishPage\\index.tsx":"18","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\DeliveryFormat.tsx":"19","D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\FinishController.tsx":"20","D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\ModelCreationController.tsx":"21","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DataCollectionPage\\index.tsx":"22","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\index.tsx":"23","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\index.tsx":"24","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\StartPage\\State.tsx":"25","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\DeviceData.tsx":"26","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\Project.tsx":"27","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\FinishPage\\State.tsx":"28","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\State.tsx":"29","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\State.tsx":"30","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DataCollectionPage\\State.tsx":"31","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx":"32","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\index.tsx":"33","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\StartComponents\\Title\\index.tsx":"34","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\StartComponents\\Input\\index.tsx":"35","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\AIModel.tsx":"36","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\SensorData.tsx":"37","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\DataSet.tsx":"38","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\Session.tsx":"39","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\FinishComponents\\Title\\index.tsx":"40","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\FinishComponents\\Input\\Labelling\\index.tsx":"41","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\DataCollectionComponents\\Title\\index.tsx":"42","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\DataCollectionComponents\\Countdown\\index.tsx":"43","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\DownloadButton\\index.tsx":"44","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\FinishButton\\index.tsx":"45","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\EmailList\\index.tsx":"46","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\FinishComponents\\Diagram\\index.jsx":"47","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\State.tsx":"48","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx":"49","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\DataCollectionComponents\\Diagram\\index.jsx":"50","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\ShowDiagram\\index.jsx":"51","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\DiagramList\\index.jsx":"52","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\Label.tsx":"53","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\DataRow.tsx":"54","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx":"55","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx":"56","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginWindow\\index.tsx":"57","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx":"58","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\Train\\index.tsx":"59","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\DataPoint.tsx":"60","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\TimeSpan.tsx":"61","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ChangeToVisuBtn\\index.tsx":"62","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx":"63","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx":"64","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx":"65","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx":"66"},{"size":419,"mtime":1613981513323,"results":"67","hashOfConfig":"68"},{"size":440,"mtime":1613932046820,"results":"69","hashOfConfig":"68"},{"size":3264,"mtime":1613981513282,"results":"70","hashOfConfig":"68"},{"size":7343,"mtime":1613983540402,"results":"71","hashOfConfig":"68"},{"size":3510,"mtime":1613932045136,"results":"72","hashOfConfig":"68"},{"size":17283,"mtime":1613981513375,"results":"73","hashOfConfig":"68"},{"size":4192,"mtime":1613982926349,"results":"74","hashOfConfig":"68"},{"size":2284,"mtime":1613982511393,"results":"75","hashOfConfig":"68"},{"size":1602,"mtime":1613932044649,"results":"76","hashOfConfig":"68"},{"size":2559,"mtime":1613983147598,"results":"77","hashOfConfig":"68"},{"size":6227,"mtime":1613981513285,"results":"78","hashOfConfig":"68"},{"size":2311,"mtime":1613932050181,"results":"79","hashOfConfig":"68"},{"size":1875,"mtime":1613932046194,"results":"80","hashOfConfig":"68"},{"size":4485,"mtime":1613981513325,"results":"81","hashOfConfig":"68"},{"size":14043,"mtime":1613932046722,"results":"82","hashOfConfig":"68"},{"size":11096,"mtime":1613981513369,"results":"83","hashOfConfig":"68"},{"size":2497,"mtime":1613981513327,"results":"84","hashOfConfig":"68"},{"size":1642,"mtime":1613932049713,"results":"85","hashOfConfig":"68"},{"size":214,"mtime":1613932045910,"results":"86","hashOfConfig":"68"},{"size":3633,"mtime":1613932044739,"results":"87","hashOfConfig":"68"},{"size":2147,"mtime":1613932044905,"results":"88","hashOfConfig":"68"},{"size":2822,"mtime":1613932049401,"results":"89","hashOfConfig":"68"},{"size":3943,"mtime":1613983483668,"results":"90","hashOfConfig":"68"},{"size":1623,"mtime":1613932049513,"results":"91","hashOfConfig":"68"},{"size":511,"mtime":1613932050143,"results":"92","hashOfConfig":"68"},{"size":2085,"mtime":1613981513372,"results":"93","hashOfConfig":"68"},{"size":7252,"mtime":1613932046297,"results":"94","hashOfConfig":"68"},{"size":428,"mtime":1613932049624,"results":"95","hashOfConfig":"68"},{"size":276,"mtime":1613932049476,"results":"96","hashOfConfig":"68"},{"size":433,"mtime":1613983080400,"results":"97","hashOfConfig":"68"},{"size":437,"mtime":1613942928060,"results":"98","hashOfConfig":"68"},{"size":5727,"mtime":1613981513383,"results":"99","hashOfConfig":"68"},{"size":1982,"mtime":1613932049906,"results":"100","hashOfConfig":"68"},{"size":1002,"mtime":1613932048922,"results":"101","hashOfConfig":"68"},{"size":3831,"mtime":1613985008071,"results":"102","hashOfConfig":"68"},{"size":485,"mtime":1613932045588,"results":"103","hashOfConfig":"68"},{"size":1533,"mtime":1613981513379,"results":"104","hashOfConfig":"68"},{"size":6044,"mtime":1613981513329,"results":"105","hashOfConfig":"68"},{"size":1574,"mtime":1613981513381,"results":"106","hashOfConfig":"68"},{"size":1000,"mtime":1613932047855,"results":"107","hashOfConfig":"68"},{"size":2678,"mtime":1613932047644,"results":"108","hashOfConfig":"68"},{"size":1002,"mtime":1613932047254,"results":"109","hashOfConfig":"68"},{"size":1046,"mtime":1613983622869,"results":"110","hashOfConfig":"68"},{"size":363,"mtime":1613932047365,"results":"111","hashOfConfig":"68"},{"size":366,"mtime":1613932049021,"results":"112","hashOfConfig":"68"},{"size":5870,"mtime":1613984639665,"results":"113","hashOfConfig":"68"},{"size":3207,"mtime":1613942927705,"results":"114","hashOfConfig":"68"},{"size":777,"mtime":1613932049858,"results":"115","hashOfConfig":"68"},{"size":843,"mtime":1613932050035,"results":"116","hashOfConfig":"68"},{"size":2433,"mtime":1613932047143,"results":"117","hashOfConfig":"68"},{"size":845,"mtime":1613960766256,"results":"118","hashOfConfig":"68"},{"size":5298,"mtime":1613985008038,"results":"119","hashOfConfig":"68"},{"size":1787,"mtime":1613932046142,"results":"120","hashOfConfig":"68"},{"size":2606,"mtime":1613932045775,"results":"121","hashOfConfig":"68"},{"size":229,"mtime":1613932048098,"results":"122","hashOfConfig":"68"},{"size":1284,"mtime":1613984658723,"results":"123","hashOfConfig":"68"},{"size":3247,"mtime":1613984352813,"results":"124","hashOfConfig":"68"},{"size":778,"mtime":1613984253276,"results":"125","hashOfConfig":"68"},{"size":10383,"mtime":1613984119745,"results":"126","hashOfConfig":"68"},{"size":946,"mtime":1613932045697,"results":"127","hashOfConfig":"68"},{"size":1370,"mtime":1613932046663,"results":"128","hashOfConfig":"68"},{"size":397,"mtime":1613932048021,"results":"129","hashOfConfig":"68"},{"size":646,"mtime":1613932048165,"results":"130","hashOfConfig":"68"},{"size":514,"mtime":1613932048620,"results":"131","hashOfConfig":"68"},{"size":3164,"mtime":1613984817676,"results":"132","hashOfConfig":"68"},{"size":1814,"mtime":1613984639664,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"gk2xru",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"136"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"136"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"181","usedDeprecatedRules":"136"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"136"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"136"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"136"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"136"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"D:\\main2\\Typescript-Frontend\\ki-app\\src\\index.tsx",[],["277","278"],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\reportWebVitals.ts",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\MainController.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\ReferringController.tsx",["279","280","281","282"],"import { Page } from \"../view/pages/PageInterface\";\r\nimport { IState, States } from \"../view/pages/State\";\r\nimport { PageController } from \"./PageController\";\r\nimport { MainController } from \"./MainController\";\r\nimport { DeliveryController } from \"./DeliveryController\";\r\nimport { VisualizationController } from \"./VisualizationController\";\r\nimport { ReferringPage } from \"../view/pages/ReferringPage/index\";\r\nimport { QRCode, ErrorCorrectLevel, QRNumber, QRAlphaNum, QR8BitByte, QRKanji } from 'qrcode-generator-ts/js';\r\n\r\n\r\nexport class RefferingController implements PageController {\r\n    private page: Page;\r\n    private state: IState;\r\n\r\n    /**\r\n     * Konstruktor des Seitenverwalters. Registriert sich als Beobachter auf seiner Seite und setzt den Start Status. \r\n     */\r\n    constructor() {\r\n        this.page = new ReferringPage({});\r\n        // this.page = new VisualizationPage({});\r\n\r\n        this.page.attach(this);\r\n        this.state = this.page.getState();\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Die Update Methode des Seitenverwalters.\r\n     */\r\n    update() {\r\n        this.state = this.page.getState();\r\n        switch (this.state.currentState) {\r\n            case States.LoadProject:\r\n                this.loadProject();\r\n                break;\r\n            case States.Register:\r\n                this.register();\r\n                break;\r\n            case States.Login:\r\n                this.login();\r\n                break;\r\n            case States.NewProjekt:\r\n                this.createNewProject();\r\n                break;\r\n            case States.LoadModel:\r\n                this.loadModel();\r\n                break;\r\n            case States.SetLanguage:\r\n                this.page.setState(MainController.getInstance().setLanguage(this.state.languageCode));\r\n                break;\r\n            case States.NeedMessage:\r\n                this.page.setState(MainController.getInstance().getMessage(this.state.messages));\r\n                break;\r\n            case States.ChangeToVisual:\r\n                MainController.getInstance().changeTo(new VisualizationController(this.state.currentProject!));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Logt den Benutzer ein\r\n     */\r\n    login() {\r\n        let adminData: { name: string, email: string, password: string; } = this.state.adminData!;\r\n        let loginSucess: Promise<boolean> = MainController.getInstance().getFacade().loginAdmin(adminData.email, adminData.password);\r\n        this.state.wait! = loginSucess;\r\n        this.state.currentState = States.waitForDB;\r\n        this.page.setState(this.state);\r\n        loginSucess.then((value: boolean) => {\r\n            if (value) {\r\n                this.state.projectData! = [];\r\n                let projectData: Promise<{ projectID: number; projectName: string; AIModelID: number[]; }[]> = MainController.getInstance().getFacade().getProjectMetas();\r\n                projectData.then((data: { projectID: number; projectName: string; AIModelID: number[]; }[]) => {\r\n                    this.state.projectData! = data;\r\n                    this.page.setState(this.state);\r\n                });\r\n\r\n            } else {\r\n                this.state.currentState = States.LoginFail;\r\n            }\r\n            this.page.setState(this.state);\r\n        });\r\n        loginSucess.catch((value: boolean) => {\r\n            console.log(value);\r\n        });\r\n        //this.state.projectData! = [{ projectID: 1, projectName: \"string\", AIModelID: [1,2] }]\r\n        //this.page.setState(this.state)\r\n    }\r\n\r\n    /**\r\n     * Registriert den Benutzer\r\n     */\r\n    register() {\r\n        let adminData: { name: string, email: string, password: string; } = this.state.adminData!;\r\n        let loginSucess: Promise<boolean> = MainController.getInstance().getFacade().registerAdmin(adminData.name, adminData.email, adminData.password);\r\n        this.state.wait! = loginSucess;\r\n        this.state.currentState = States.waitForDB;\r\n        this.page.setState(this.state);\r\n        loginSucess.then((value: boolean) => {\r\n            if (!value) {\r\n                this.state.currentState = States.LoginFail;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Erstellt ein QRCode und übergibt in an die Seite\r\n     */\r\n    createQR() {\r\n        const url = new URL(document.URL);\r\n        url.searchParams.append(\"SessionID\", MainController.getInstance().getFacade().getSessionID().toString());\r\n        url.searchParams.append(\"isMiner\", \"true\");\r\n        let link: string = url.toString();\r\n        var qr = new QRCode();\r\n        qr.setTypeNumber(5);\r\n        qr.setErrorCorrectLevel(ErrorCorrectLevel.L);\r\n        qr.addData(link);\r\n        qr.make();\r\n        this.state.qr = qr.toDataURL();\r\n        this.state.currentState = States.SetQRC;\r\n    }\r\n\r\n    /**\r\n     * Erstelle ein neues Projekt, welches auch als momentanes Projekt gesetzt wird.\r\n     */\r\n    createNewProject() {\r\n        let sucess: Promise<boolean> = MainController.getInstance().getFacade().createProject(this.state.currentProject!.projectName);\r\n        this.state.wait! = sucess;\r\n        this.state.currentState = States.waitForDB;\r\n        this.page.setState(this.state);\r\n        sucess.then((value: boolean) => {\r\n            if (value) {\r\n                this.createQR();\r\n                let projectData: Promise<{ projectID: number; projectName: string; AIModelID: number[]; }[]> = MainController.getInstance().getFacade().getProjectMetas();\r\n                projectData.then((data: { projectID: number; projectName: string; AIModelID: number[]; }[]) => {\r\n                    this.state.projectData! = data;\r\n                });\r\n            } else {\r\n                this.state.currentState = States.LoadError;\r\n            }\r\n            this.page.setState(this.state);\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Setzt ein Projekt als momentanes Projekt\r\n     */\r\n    loadProject() {\r\n        let projectId: number = this.state.currentProject!.projectID!;\r\n        let sucess: Promise<boolean> = MainController.getInstance().getFacade().loadProject(projectId);\r\n        this.state.wait! = sucess;\r\n        this.state.currentState = States.waitForDB;\r\n        this.page.setState(this.state);\r\n        sucess.then((value: boolean) => {\r\n            if (value) {\r\n                this.createQR();\r\n            } else {\r\n                this.state.currentState = States.LoadError;\r\n            }\r\n        });\r\n        this.page.setState(this.state);\r\n    }\r\n\r\n    /**\r\n     * Läde ein Modell und wechselt zur delivery Seite\r\n     */\r\n    loadModel() {\r\n        let projectId: number = this.state.currentProject!.projectID;\r\n        let sucess: Promise<boolean> = MainController.getInstance().getFacade().loadProject(projectId);\r\n        this.state.wait! = sucess;\r\n        this.state.currentState = States.waitForDB;\r\n        this.page.setState(this.state);\r\n        sucess.then((value: boolean) => {\r\n            if (value) {\r\n                let deliveryConroller: DeliveryController = new DeliveryController(this.state.currentProject!);\r\n                MainController.getInstance().changeTo(deliveryConroller);\r\n            } else {\r\n                this.state.currentState = States.LoadError;\r\n            }\r\n        });\r\n        this.page.setState(this.state);\r\n    }\r\n}","D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\StartController.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\Facade.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\State.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\DeliveryController.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\DataCollectionController.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\VisualizationController.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\SensorManager.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\StartPage\\index.tsx",["283","284"],"import React, { Component } from 'react';\r\nimport PubSub from 'pubsub-js';\r\nimport Title from '../../components/StartComponents/Title';\r\nimport Input from '../../components/StartComponents/Input';\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport ReactDOM from 'react-dom';\r\nimport { States } from '../State';\r\n\r\ntype Props = {\r\n\r\n};\r\n\r\nexport class StartPage extends React.Component<Props, State> implements Page {\r\n    state = new State();\r\n    observers: PageController[] = [];\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.setAvailableSensors();\r\n        this.changeSettings();\r\n        const VDOM = (\r\n            <div>\r\n                <Title />\r\n                <Input />\r\n            </div>\r\n        );\r\n        ReactDOM.render(VDOM, document.getElementById('root'));\r\n    }\r\n\r\n    setAvailableSensors() {\r\n        PubSub.publish('setAvailableSensors', (\r\n            this.state.recordingSettings.availableSensorTypes));\r\n    }\r\n\r\n    /**\r\n     * Prüft ob der Nutzer \"Start\" druckt und ändert den Zustand.\r\n     */\r\n    changeSettings() {\r\n        PubSub.subscribe('settingsFinish', (data: {\r\n            newDataSetName: string,\r\n            usedSensorTypes: number[],\r\n            waitTime: number,\r\n            readTime: number,\r\n            availableSensorTypes: { sensorTypID: number, sensorType: string, chosen: boolean; }[];\r\n        }) => {\r\n            this.setState({ recordingSettings: data });\r\n            this.state.currentState = States.ChangeToDataCollection;\r\n            this.notify();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Die Methoden für Beobachtermuster\r\n     * @param observer Beobachter,nähmlich Controller\r\n     */\r\n    attach(observer: PageController) {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    detach(observer: PageController) {\r\n        const index = this.observers.indexOf(observer, 0);\r\n        if (index > -1) {\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notify() {\r\n        for (let index = 0; index < this.observers.length; index++) {\r\n            const element = this.observers[index];\r\n            element.update();\r\n        }\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n}\r\n","D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\Language.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\AIBuilder.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\User.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\DatabaseConnector.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\AIDistributor.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\FinishPage\\index.tsx",["285","286"],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\DeliveryFormat.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\FinishController.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\controller\\ModelCreationController.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DataCollectionPage\\index.tsx",["287"],"import React from 'react';\r\nimport PubSub from 'pubsub-js';\r\nimport Title from '../../components/DataCollectionComponents/Title';\r\nimport Countdown from '../../components/DataCollectionComponents/Countdown';\r\nimport Diagram from '../../components/DataCollectionComponents/Diagram';\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport ReactDOM from 'react-dom';\r\nimport { States } from '../State';\r\n\r\ntype Props = {\r\n};\r\n\r\nexport class DataCollectionPage extends React.Component<Props, State> implements Page {\r\n    state = new State;\r\n    observers: PageController[] = [];\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.finishCountdown();\r\n        const VDOM = (\r\n            <div>\r\n                <Title />\r\n                <Countdown />\r\n                <Diagram />\r\n            </div>\r\n        );\r\n        ReactDOM.render(VDOM, document.getElementById('root'));\r\n    }\r\n\r\n\r\n    /**\r\n     * Diese Methode braucht nur einmal aufzurufen, Countdown geht automatisch.\r\n     * @param countdownNumber Die Countdownzahl zu zeigen.\r\n     */\r\n    showCountdownNumber(leadTime: number) {\r\n        this.setState({ leadTime: leadTime });\r\n        PubSub.publish('startCounting', this.state.leadTime);\r\n    }\r\n\r\n    /**\r\n     * Prüft ob Countdown fertig ist und ändert den Zustand.\r\n     */\r\n    finishCountdown() {\r\n        PubSub.subscribe('finishCountdwon', () => {\r\n            this.setState({ currentState: States.NeedInstantDiagram });\r\n            this.notify();\r\n        }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Diese Methode sollte während Datenerfassung jede Sekunde von Controller aufgerufen werden, um Bild zu updaten.\r\n     * @param countdownNumber Die Countdownzahl zu zeigen\r\n     */\r\n    showDiagram(dataRows: { value: number; relativeTime: number; }[][], usedSensorNames: string[]) {\r\n       // this.setState({ dataRows: dataRows });\r\n        this.setState({ usedSensorNames: usedSensorNames });\r\n        //PubSub.publish('startDiagram', this.state.dataRows);\r\n        PubSub.publish('giveLineLabels', this.state.usedSensorNames);\r\n    }\r\n\r\n    /**\r\n     * Die Methoden für Beobachtermuster\r\n     * @param observer Beobachter,nähmlich Controller\r\n     */\r\n    attach(observer: PageController) {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    detach(observer: PageController) {\r\n        const index = this.observers.indexOf(observer, 0);\r\n        if (index > -1) {\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notify() {\r\n        for (let index = 0; index < this.observers.length; index++) {\r\n            const element = this.observers[index];\r\n            element.update();\r\n        }\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n}","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\index.tsx",["288","289","290","291","292"],"import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js';\r\nimport './VisualizationPage.css'\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport { MainController } from '../../../controller/MainController';\r\nimport ReactDOM from 'react-dom';\r\nimport { States } from '../State';\r\nimport FinishButton from '../../components/VisualizationComponents/FinishButton';\r\nimport ShowDiagram from '../../components/VisualizationComponents/ShowDiagram';\r\nimport DiagramList from '../../components/VisualizationComponents/DiagramList';\r\n\r\ntype Props = {\r\n};\r\n\r\nexport class VisualizationPage extends React.Component<Props, State> implements Page {\r\n    state = new State()\r\n    observers: PageController[] = [];\r\n    constructor(props: Props) {\r\n        super(props);\r\n        //<ShowDiagram />\r\n        const VDOM = (\r\n            <div className=\"visualizationpage\">\r\n\r\n                <DiagramList />\r\n                <FinishButton />\r\n            </div>\r\n        );\r\n        ReactDOM.render(VDOM, document.getElementById('root'));\r\n        this.getDatarows()\r\n        this.changetonextpage()\r\n    }\r\n\r\n\r\n    attach(observer: PageController) {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    detach(observer: PageController) {\r\n        const index = this.observers.indexOf(observer, 0);\r\n        if (index > -1) {\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notify() {\r\n        for (let index = 0; index < this.observers.length; index++) {\r\n            const element = this.observers[index];\r\n            element.update();\r\n        }\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n    getDatarows() {\r\n        /**   var emp = []\r\n          emp.push([{ sensorType: 85124, value: [55, 66, 12], relativeTime: 0 },\r\n          { sensorType: 85124, value: [26, 21, 2], relativeTime: 1 },\r\n          { sensorType: 85124, value: [91, 83, 50], relativeTime: 2 },\r\n          { sensorType: 85124, value: [22, 71, 23], relativeTime: 3 },\r\n          { sensorType: 85124, value: [14, 8, 77], relativeTime: 4 },\r\n          ])\r\n          emp.push([{ sensorType: 45157, value: [83, 44, 1], relativeTime: 0 },\r\n          { sensorType: 45157, value: [78, 55, 2], relativeTime: 1 },\r\n          { sensorType: 45157, value: [51, 66, 3], relativeTime: 2 },\r\n          { sensorType: 45157, value: [23, 81, 50], relativeTime: 3 },\r\n          { sensorType: 45157, value: [13, 20, 5], relativeTime: 4 },\r\n          ])\r\n          \r\n          const ex = {\r\n              dataSetID: 1,\r\n              rows: emp\r\n          }\r\n          PubSub.publish('getrows', ex)\r\n          var ex2 = []\r\n          ex2.push([{ sensorType: 123, value: [55, 66, 12], relativeTime: 0 },\r\n          { sensorType: 123, value: [26, 21, 2], relativeTime: 1 },\r\n          { sensorType: 123, value: [91, 83, 50], relativeTime: 2 },\r\n          { sensorType: 123, value: [22, 71, 23], relativeTime: 3 },\r\n          { sensorType: 123, value: [14, 8, 77], relativeTime: 4 },\r\n          ])\r\n          ex2.push([{ sensorType: 456, value: [83, 44, 1], relativeTime: 0 },\r\n          { sensorType: 456, value: [78, 55, 2], relativeTime: 1 },\r\n          { sensorType: 456, value: [51, 66, 3], relativeTime: 2 },\r\n          { sensorType: 456, value: [23, 81, 50], relativeTime: 3 },\r\n          { sensorType: 456, value: [13, 20, 5], relativeTime: 4 },\r\n          ])\r\n         \r\n          const ex22 = {\r\n              dataSetID: 2,\r\n              rows: ex2\r\n          }\r\n          PubSub.publish('getrows', ex22)\r\n          */\r\n        this.state.currentDataSet?.map((dataset) => {\r\n            PubSub.publish('getrows', dataset)\r\n        })\r\n\r\n    }\r\n\r\n    changetonextpage() {\r\n        PubSub.subscribe('changepage', (_msg: any) => {\r\n            this.state.currentState = States.ChangeToCreation\r\n            this.notify()\r\n\r\n        })\r\n    }\r\n}\r\n","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\index.tsx",["293","294","295","296"],"import React, { Component } from 'react';\r\nimport DownloadButton from '../../components/DeliveryComponents/DownloadButton';\r\nimport EmailList from '../../components/DeliveryComponents/EmailList';\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport ReactDOM from 'react-dom';\r\nimport { States } from '../State';\r\n\r\ntype Props = {\r\n};\r\n\r\nexport class DeliveryPage extends React.Component<Props, State> implements Page {\r\n\r\n\tstate = new State();\r\n\tobservers: PageController[] = [];\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst VDOM = (\r\n\t\t\t<div className=\"deliverypage\">\r\n\t\t\t\t<EmailList />\r\n\t\t\t\t<DownloadButton />\r\n\t\t\t</div>\r\n\t\t);\r\n\t\tReactDOM.render(VDOM, document.getElementById('root'));\r\n\t\tthis.delivery()\r\n\t\tthis.download()\r\n\t}\r\n\r\n\tattach(observer: PageController) {\r\n\t\tthis.observers.push(observer);\r\n\t}\r\n\r\n\tdetach(observer: PageController) {\r\n\t\tconst index = this.observers.indexOf(observer, 0);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.observers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tnotify() {\r\n\t\tfor (let index = 0; index < this.observers.length; index++) {\r\n\t\t\tconst element = this.observers[index];\r\n\t\t\telement.update();\r\n\t\t}\r\n\t}\r\n\r\n\tgetState() {\r\n\t\treturn this.state;\r\n\t}\r\n\r\n\tdelivery() {\r\n\t\tPubSub.subscribe('delivery', (_msg: any, data: string[]) => {\r\n\t\t\tthis.state.currentState = States.DeliverWeb\r\n\t\t\tthis.state.chosenEmails = data\r\n\t\t\tthis.notify()\r\n\t\t})\r\n\t}\r\n\r\n\tdownload() {\r\n\t\tPubSub.subscribe('download', (_msg: any) => {\r\n\t\t\tthis.state.currentState = States.NeedDownload\r\n\t\t\tthis.notify()\r\n\t\t})\r\n\t}\r\n\r\n\r\n}\r\n","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\StartPage\\State.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\DeviceData.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\Project.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\FinishPage\\State.tsx",["297"],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DeliveryPage\\State.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\VisualizationPage\\State.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\DataCollectionPage\\State.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\index.tsx",["298","299","300","301","302","303","304","305","306","307","308","309","310"],"import React, { Component } from 'react';\r\nimport PubSub from 'pubsub-js';\r\nimport ConstantsText from '../../components/ReferringComponents/ConstantsText';\r\nimport NewProjectButton from '../../components/ReferringComponents/NewProjectButton';\r\nimport LoadModelButton from '../../components/ReferringComponents/LoadModelButton';\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport ReactDOM from 'react-dom';\r\nimport { States } from '../State';\r\nimport LoginWindow from '../../components/ReferringComponents/LoginWindow';\r\n\r\ntype Props = {\r\n\r\n};\r\n\r\nexport class ReferringPage extends React.Component<Props, State> implements Page {\r\n\r\n    state = new State();\r\n    observers: PageController[] = [];\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        const VDOM = (\r\n            <div>\r\n                <ConstantsText />\r\n                <LoginWindow />\r\n                <NewProjectButton />\r\n                <LoadModelButton />\r\n            </div>\r\n        );\r\n        ReactDOM.render(VDOM, document.getElementById('root'));\r\n        this.createNewProject();\r\n        this.register();\r\n        this.login();\r\n        this.getmodellist();\r\n        this.getProjectList();\r\n        this.loadproject();\r\n        this.changetovisu();\r\n        this.loadmodel();\r\n    }\r\n\r\n    attach(observer: PageController) {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    detach(observer: PageController) {\r\n        const index = this.observers.indexOf(observer, 0);\r\n        if (index > -1) {\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notify() {\r\n        for (let index = 0; index < this.observers.length; index++) {\r\n            const element = this.observers[index];\r\n            element.update();\r\n        }\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n    createNewProject() {\r\n        PubSub.subscribe('createnewproject', (_msg: any, data: string) => {\r\n            // console.log(this.state.currentState)\r\n            this.state.currentState = States.NewProjekt;\r\n            this.state.currentProject = { projectID: -10000, projectName: data, choosenAIModelID: -10000 };\r\n            //hier notifty for createnewProject\r\n            this.notify();\r\n            //notify for needqr\r\n            PubSub.publish('getqr', this.state.qr);\r\n        });\r\n    }\r\n\r\n    register() {\r\n        PubSub.subscribe('register', (_msg: any, data: { name: string, email: string, password: string; }) => {\r\n            this.state.adminData = data;\r\n            this.state.currentState = States.Register;\r\n            //this.setState({ adminData: data })\r\n            //this.setState({ currentState: States.Register })\r\n            //console.log(this.state.currentState)\r\n            this.notify();\r\n            this.state.wait!.then(() => {\r\n                //console.log(this.state.currentState)\r\n                let flag: boolean;\r\n                if (this.state.currentState != States.Register) {\r\n                    flag = false;\r\n                } else {\r\n                    PubSub.publish('disabled', false);\r\n                    flag = true;\r\n                }\r\n                PubSub.publish('registerstatus', flag);\r\n            });\r\n        });\r\n    }\r\n\r\n    login() {\r\n        PubSub.subscribe('login', (_msg: any, data: { name: string, email: string, password: string; }) => {\r\n            // console.log(this.state.currentState)\r\n            this.state.adminData = data;\r\n            this.state.currentState = States.Login;\r\n            this.notify();\r\n            let flag: boolean;\r\n            this.state.wait!.then(() => {\r\n                if (this.state.currentState as States === States.LoginFail as States) {\r\n                    flag = false;\r\n                } else {\r\n                    flag = true;\r\n                    PubSub.publish('disabled', false);\r\n                    PubSub.publish('getprojectlist', this.state.projectData);\r\n                }\r\n                PubSub.publish('loginstatus', flag);\r\n            });\r\n        });\r\n    }\r\n\r\n    getmodellist() {\r\n        PubSub.subscribe('needmodellist', (msg: any, data: { projectID: number; }) => {\r\n            for (let index = 0; index < this.state.projectData!.length; index++) {\r\n                if (data.projectID === this.state.projectData![index].projectID) {\r\n                    PubSub.publish('getmodellist', this.state.projectData![index]);\r\n                    return;\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    getProjectList() {\r\n        PubSub.subscribe('needprojectlist', () => {\r\n            PubSub.publish('getprojectlist', this.state.projectData!);\r\n        });\r\n    }\r\n\r\n    loadproject() {\r\n        PubSub.subscribe('loadproject', (_msg: any, data: { projectID: number, projectName: string, choosenAIModelID: number; }) => {\r\n            this.state.currentProject = { projectID: data.projectID, projectName: data.projectName, choosenAIModelID: -10000 };\r\n            this.state.currentState = States.LoadProject;\r\n            console.log(data.projectID);\r\n            this.notify();\r\n            PubSub.publish('getqr', this.state.qr);\r\n        });\r\n    }\r\n\r\n    changetovisu() {\r\n        PubSub.subscribe('changetovisu', (_msg: any) => {\r\n            this.state.currentState = States.ChangeToVisual;\r\n            this.notify();\r\n        });\r\n    }\r\n\r\n    loadmodel() {\r\n        PubSub.subscribe('loadmodel', (_msg: any, data: { projectID: number, projectName: string, choosenAIModelID: number; }) => {\r\n            this.state.currentProject = data;\r\n            this.state.currentState = States.LoadModel;\r\n            this.notify();\r\n        });\r\n    }\r\n}\r\n","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\index.tsx",["311","312","313"],"import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js';\r\nimport { Page } from \"../PageInterface\";\r\nimport { PageController } from \"../../../controller/PageController\";\r\nimport { State } from \"./State\";\r\nimport ReactDOM from 'react-dom';\r\nimport './ModelCreationPage.css'\r\nimport { States } from '../State'\r\nimport Train from '../../components/ModelCreationComponents/Train';\r\n\r\ntype Props = {\r\n};\r\n\r\nexport class ModelCreationPage extends React.Component<Props, State> implements Page {\r\n\tstate = new State();\r\n\tobservers: PageController[] = [];\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst VDOM = (\r\n\t\t\t<div className=\"modelcreationpage\">\r\n\t\t\t\t<Train />\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tReactDOM.render(VDOM, document.getElementById('root'));\r\n\t\tthis.needDatabaseList()\r\n\t\tthis.train()\r\n\t}\r\n\r\n\tattach(observer: PageController) {\r\n\t\tthis.observers.push(observer);\r\n\t}\r\n\r\n\tdetach(observer: PageController) {\r\n\t\tconst index = this.observers.indexOf(observer, 0);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.observers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tnotify() {\r\n\t\tfor (let index = 0; index < this.observers.length; index++) {\r\n\t\t\tconst element = this.observers[index];\r\n\t\t\telement.update();\r\n\t\t}\r\n\t}\r\n\r\n\tgetState() {\r\n\t\treturn this.state;\r\n\t}\r\n\r\n\tneedDatabaseList() {\r\n\t\tthis.state.currentState = States.NeedDatabaseList\r\n\t\tthis.notify()\r\n\t\tlet databaseList = [\r\n\t\t\t{ dataSetID: 1, dataSetName: 'dataset1' },\r\n\t\t\t{ dataSetID: 2, dataSetName: 'dataset2' },\r\n\t\t\t{ dataSetID: 3, dataSetName: 'dataset3' }\r\n\t\t]\r\n\t\tPubSub.publish('getlist', databaseList)\r\n\t\t//PubSub.publish('getlist', this.state.dataSets)\r\n\t}\r\n\r\n\ttrain() {\r\n\t\tPubSub.subscribe('train', (_msg: any, data: { dataSets: number[], imputations: string[], classifier: string, scaler: string, extractions: string[] }) => {\r\n\t\t\t//console.log(data);\r\n\t\t\tthis.state.currentState = States.NeedKiTraining\r\n\t\t\t//this.state.trainingParameter = data\r\n\t\t\t//console.log(this.state.trainingParameter);\r\n\t\t\tthis.notify()\r\n\t\t})\r\n\t}\r\n\r\n}\r\n","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\StartComponents\\Title\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\StartComponents\\Input\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\AIModel.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\SensorData.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\DataSet.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\Session.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\FinishComponents\\Title\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\FinishComponents\\Input\\Labelling\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\DataCollectionComponents\\Title\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\DataCollectionComponents\\Countdown\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\DownloadButton\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\FinishButton\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\DeliveryComponents\\EmailList\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\FinishComponents\\Diagram\\index.jsx",["314","315","316"],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ModelCreationPage\\State.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\pages\\ReferringPage\\State.tsx",["317","318","319","320","321","322"],"import { IState } from \"../State\";\r\nimport { States } from \"../State\";\r\nimport { QRCode, ErrorCorrectLevel, QRNumber, QRAlphaNum, QR8BitByte, QRKanji } from 'qrcode-generator-ts/js';\r\n\r\nexport class State implements IState {\r\n  currentState: States = States.NeedMessage;\r\n  languageCode: string = \"de\";\r\n  messages: { text: string, id: number; }[] = [];\r\n  projectData?: { projectID: number; projectName: string; AIModelID: number[]; }[];\r\n  currentProject?: { projectID: number, projectName: string, choosenAIModelID: number; };\r\n  // chosenModel?: string;\r\n  adminData?: { name: string, email: string, password: string; };\r\n  //minerData?:\r\n  aiUserData?: { name: string, result: string; };\r\n  labels?: { labelID: number, start: number, end: number; }[];\r\n  sessionID?: string;\r\n  //aiParameter?: \r\n  qr?: string;\r\n  wait?: Promise<any>\r\n}\r\n","D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\DataCollectionComponents\\Diagram\\index.jsx",["323","324"],"import React, { Component } from 'react';\r\nimport PubSub from 'pubsub-js';\r\n\r\nexport default class Diagram extends Component {\r\n    state = {\r\n        sensorRow: [],\r\n        datavalue: [],\r\n        time: [],\r\n        showDiagram: false,\r\n        color: ['rgba(46,139,87,1)', 'rgba(68,24,232,1)', 'rgba(238,173,14,1)', 'rgba(178,34,34,1)'],\r\n    };\r\n\r\n    render() {\r\n        PubSub.subscribe(\"startDiagram\", (dataRows) => {\r\n            this.setState({\r\n                sensorRow: [],\r\n                datavalue: [],\r\n                time: [],\r\n                showDiagram: true\r\n            });\r\n            //put each value Array in State\r\n            for (var i = 0; i < dataRows.length; i++) {\r\n                var datavalues = [];\r\n                for (var j = 0; j < dataRows[i].length; j++) {\r\n                    datavalues.push(dataRows[i][j].value);\r\n                }\r\n                this.state.datavalue.push(datavalues);\r\n            }\r\n\r\n            //put time in State\r\n            for (var j = 0; j < dataRows[0].length; j++) {\r\n                this.state.time.push(dataRows[0][j].relativeTime);\r\n            }\r\n        });\r\n        var newDatasets = [];\r\n        for (var i = 0; i < this.state.sensorRow.length; i++) {\r\n            newDatasets.push(\r\n                {\r\n                    label: this.state.sensorRow[i],\r\n                    strokeColor: this.state.color[i],\r\n                    borderWidth: 1,\r\n                    data: this.state.datavalue[i],\r\n                }\r\n            );\r\n\r\n        }\r\n        const data = {\r\n            labels: this.state.time,\r\n            datasets: newDatasets\r\n        };\r\n        const options = {\r\n            datasetFill: false,\r\n            pointDotRadius: 2,\r\n            pointHitDetectionRadius: 1,\r\n            offsetGridLines: false,\r\n        };\r\n        PubSub.subscribe(\"giveLineLabels\", (usedSensorNames) => {\r\n            this.setState({ sensorRow: usedSensorNames });\r\n        });\r\n        const lineLabels = [];\r\n        for (var i = 0; i < this.state.sensorRow.length; i++) {\r\n            lineLabels.push(<font color={this.state.color[i]}>■{this.state.sensorRow[i]}<br /></font>);\r\n        }\r\n\r\n        var LineChart = require(\"react-chartjs\").Line;\r\n\r\n        return (\r\n            <div>\r\n                {lineLabels}\r\n                <LineChart data={data} options={options} width=\"425\" height=\"275\" />\r\n            </div>\r\n        );\r\n    }\r\n}",["325","326"],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\ShowDiagram\\index.jsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\VisualizationComponents\\DiagramList\\index.jsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\Label.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\DataRow.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ConstantsText\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\NewProjectButton\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoginWindow\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LoadModelButton\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ModelCreationComponents\\Train\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\DataPoint.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\model\\TimeSpan.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ChangeToVisuBtn\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\LinkText\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\QRImage\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ProjectList\\index.tsx",[],"D:\\main2\\Typescript-Frontend\\ki-app\\src\\view\\components\\ReferringComponents\\ModelList\\index.tsx",[],{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","severity":1,"message":"332","line":8,"column":37,"nodeType":"333","messageId":"334","endLine":8,"endColumn":45},{"ruleId":"331","severity":1,"message":"335","line":8,"column":47,"nodeType":"333","messageId":"334","endLine":8,"endColumn":57},{"ruleId":"331","severity":1,"message":"336","line":8,"column":59,"nodeType":"333","messageId":"334","endLine":8,"endColumn":69},{"ruleId":"331","severity":1,"message":"337","line":8,"column":71,"nodeType":"333","messageId":"334","endLine":8,"endColumn":78},{"ruleId":"331","severity":1,"message":"338","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":26},{"ruleId":"339","severity":1,"message":"340","line":48,"column":13,"nodeType":"341","endLine":48,"endColumn":23},{"ruleId":"331","severity":1,"message":"338","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":26},{"ruleId":"331","severity":1,"message":"342","line":10,"column":10,"nodeType":"333","messageId":"334","endLine":10,"endColumn":16},{"ruleId":"343","severity":1,"message":"344","line":16,"column":13,"nodeType":"345","messageId":"346","endLine":16,"endColumn":22,"fix":"347"},{"ruleId":"331","severity":1,"message":"338","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":26},{"ruleId":"331","severity":1,"message":"348","line":7,"column":10,"nodeType":"333","messageId":"334","endLine":7,"endColumn":24},{"ruleId":"331","severity":1,"message":"349","line":11,"column":8,"nodeType":"333","messageId":"334","endLine":11,"endColumn":19},{"ruleId":"350","severity":1,"message":"351","line":98,"column":50,"nodeType":"352","messageId":"353","endLine":98,"endColumn":52},{"ruleId":"339","severity":1,"message":"340","line":106,"column":13,"nodeType":"341","endLine":106,"endColumn":23},{"ruleId":"331","severity":1,"message":"338","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":26},{"ruleId":"339","severity":1,"message":"340","line":55,"column":4,"nodeType":"341","endLine":55,"endColumn":14},{"ruleId":"339","severity":1,"message":"340","line":56,"column":4,"nodeType":"341","endLine":56,"endColumn":14},{"ruleId":"339","severity":1,"message":"340","line":63,"column":4,"nodeType":"341","endLine":63,"endColumn":14},{"ruleId":"354","severity":1,"message":"355","line":2,"column":26,"nodeType":"333","messageId":"356","endLine":2,"endColumn":32},{"ruleId":"331","severity":1,"message":"338","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":26},{"ruleId":"339","severity":1,"message":"340","line":68,"column":13,"nodeType":"341","endLine":68,"endColumn":23},{"ruleId":"339","severity":1,"message":"340","line":69,"column":13,"nodeType":"341","endLine":69,"endColumn":23},{"ruleId":"339","severity":1,"message":"340","line":79,"column":13,"nodeType":"341","endLine":79,"endColumn":23},{"ruleId":"339","severity":1,"message":"340","line":80,"column":13,"nodeType":"341","endLine":80,"endColumn":23},{"ruleId":"357","severity":1,"message":"358","line":88,"column":45,"nodeType":"359","messageId":"360","endLine":88,"endColumn":47},{"ruleId":"339","severity":1,"message":"340","line":102,"column":13,"nodeType":"341","endLine":102,"endColumn":23},{"ruleId":"339","severity":1,"message":"340","line":103,"column":13,"nodeType":"341","endLine":103,"endColumn":23},{"ruleId":"339","severity":1,"message":"340","line":140,"column":13,"nodeType":"341","endLine":140,"endColumn":23},{"ruleId":"339","severity":1,"message":"340","line":141,"column":13,"nodeType":"341","endLine":141,"endColumn":23},{"ruleId":"339","severity":1,"message":"340","line":150,"column":13,"nodeType":"341","endLine":150,"endColumn":23},{"ruleId":"339","severity":1,"message":"340","line":157,"column":13,"nodeType":"341","endLine":157,"endColumn":23},{"ruleId":"339","severity":1,"message":"340","line":158,"column":13,"nodeType":"341","endLine":158,"endColumn":23},{"ruleId":"331","severity":1,"message":"338","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":26},{"ruleId":"339","severity":1,"message":"340","line":54,"column":3,"nodeType":"341","endLine":54,"endColumn":13},{"ruleId":"339","severity":1,"message":"340","line":68,"column":4,"nodeType":"341","endLine":68,"endColumn":14},{"ruleId":"361","severity":1,"message":"362","line":40,"column":22,"nodeType":"333","messageId":"363","endLine":40,"endColumn":23},{"ruleId":"357","severity":1,"message":"364","line":50,"column":23,"nodeType":"359","messageId":"360","endLine":50,"endColumn":25},{"ruleId":"357","severity":1,"message":"364","line":53,"column":23,"nodeType":"359","messageId":"360","endLine":53,"endColumn":25},{"ruleId":"331","severity":1,"message":"365","line":3,"column":10,"nodeType":"333","messageId":"334","endLine":3,"endColumn":16},{"ruleId":"331","severity":1,"message":"366","line":3,"column":18,"nodeType":"333","messageId":"334","endLine":3,"endColumn":35},{"ruleId":"331","severity":1,"message":"332","line":3,"column":37,"nodeType":"333","messageId":"334","endLine":3,"endColumn":45},{"ruleId":"331","severity":1,"message":"335","line":3,"column":47,"nodeType":"333","messageId":"334","endLine":3,"endColumn":57},{"ruleId":"331","severity":1,"message":"336","line":3,"column":59,"nodeType":"333","messageId":"334","endLine":3,"endColumn":69},{"ruleId":"331","severity":1,"message":"337","line":3,"column":71,"nodeType":"333","messageId":"334","endLine":3,"endColumn":78},{"ruleId":"361","severity":1,"message":"362","line":31,"column":22,"nodeType":"333","messageId":"363","endLine":31,"endColumn":23},{"ruleId":"361","severity":1,"message":"367","line":61,"column":18,"nodeType":"333","messageId":"363","endLine":61,"endColumn":19},{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","replacedBy":"330"},"no-native-reassign",["368"],"no-negated-in-lhs",["369"],"@typescript-eslint/no-unused-vars","'QRNumber' is defined but never used.","Identifier","unusedVar","'QRAlphaNum' is defined but never used.","'QR8BitByte' is defined but never used.","'QRKanji' is defined but never used.","'Component' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'States' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"370","text":"371"},"'MainController' is defined but never used.","'ShowDiagram' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/no-use-before-define","'States' was used before it was defined.","noUseBeforeDefine","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'j' is already defined.","redeclared","Expected '===' and instead saw '=='.","'QRCode' is defined but never used.","'ErrorCorrectLevel' is defined but never used.","'i' is already defined.","no-global-assign","no-unsafe-negation",[634,634],"()"]